//autogenerated on 7/27/2016 8:36:07 PM
using System;
using System.Text;

namespace CSGL.OpenGL.Unmanaged {
    public static unsafe class GL {
        public delegate void glActiveShaderProgramDelegate(uint pipeline, uint program);
        public static glActiveShaderProgramDelegate glActiveShaderProgram;

        public delegate void glActiveTextureDelegate(TextureUnit texture);
        public static glActiveTextureDelegate glActiveTexture;

        public delegate void glAttachShaderDelegate(uint program, uint shader);
        public static glAttachShaderDelegate glAttachShader;

        public delegate void glBeginConditionalRenderDelegate(uint id, TypeEnum mode);
        public static glBeginConditionalRenderDelegate glBeginConditionalRender;

        public delegate void glBeginQueryDelegate(QueryMode target, uint id);
        public static glBeginQueryDelegate glBeginQuery;

        public delegate void glBeginQueryIndexedDelegate(QueryMode target, uint index, uint id);
        public static glBeginQueryIndexedDelegate glBeginQueryIndexed;

        public delegate void glBeginTransformFeedbackDelegate(TransformFeedbackMode primitiveMode);
        public static glBeginTransformFeedbackDelegate glBeginTransformFeedback;

        public delegate void glBindAttribLocationDelegate(uint program, uint index, string name);
        public static glBindAttribLocationDelegate glBindAttribLocation;

        public delegate void glBindBufferDelegate(BufferTarget target, uint buffer);
        public static glBindBufferDelegate glBindBuffer;

        public delegate void glBindBufferBaseDelegate(BufferTarget target, uint index, uint buffer);
        public static glBindBufferBaseDelegate glBindBufferBase;

        public delegate void glBindBufferRangeDelegate(BufferTarget target, uint index, uint buffer, int offset, int size);
        public static glBindBufferRangeDelegate glBindBufferRange;

        public delegate void glBindBuffersBaseDelegate(BufferTarget target, uint first, int count, uint[] buffers);
        public static glBindBuffersBaseDelegate glBindBuffersBase;

        public delegate void glBindBuffersRangeDelegate(BufferTarget target, uint first, int count, uint[] buffers, int[] offsets, int[] sizes);
        public static glBindBuffersRangeDelegate glBindBuffersRange;

        public delegate void glBindFragDataLocationDelegate(uint program, uint color, string name);
        public static glBindFragDataLocationDelegate glBindFragDataLocation;

        public delegate void glBindFragDataLocationIndexedDelegate(uint program, uint colorNumber, uint index, string name);
        public static glBindFragDataLocationIndexedDelegate glBindFragDataLocationIndexed;

        public delegate void glBindFramebufferDelegate(FramebufferTarget target, uint framebuffer);
        public static glBindFramebufferDelegate glBindFramebuffer;

        public delegate void glBindImageTextureDelegate(uint unit, uint texture, int level, bool layered, int layer, uint access, uint format);
        public static glBindImageTextureDelegate glBindImageTexture;

        public delegate void glBindImageTexturesDelegate(uint first, int count, uint[] textures);
        public static glBindImageTexturesDelegate glBindImageTextures;

        public delegate void glBindProgramPipelineDelegate(uint pipeline);
        public static glBindProgramPipelineDelegate glBindProgramPipeline;

        public delegate void glBindRenderbufferDelegate(RenderbufferTarget target, uint renderbuffer);
        public static glBindRenderbufferDelegate glBindRenderbuffer;

        public delegate void glBindSamplerDelegate(uint unit, uint sampler);
        public static glBindSamplerDelegate glBindSampler;

        public delegate void glBindSamplersDelegate(uint first, int count, uint[] samplers);
        public static glBindSamplersDelegate glBindSamplers;

        public delegate void glBindTextureDelegate(TextureTarget target, uint texture);
        public static glBindTextureDelegate glBindTexture;

        public delegate void glBindTextureUnitDelegate(uint unit, uint texture);
        public static glBindTextureUnitDelegate glBindTextureUnit;

        public delegate void glBindTexturesDelegate(uint first, int count, uint[] textures);
        public static glBindTexturesDelegate glBindTextures;

        public delegate void glBindTransformFeedbackDelegate(uint target, uint id);
        public static glBindTransformFeedbackDelegate glBindTransformFeedback;

        public delegate void glBindVertexArrayDelegate(uint array);
        public static glBindVertexArrayDelegate glBindVertexArray;

        public delegate void glBindVertexBufferDelegate(uint bindingindex, uint buffer, int offset, int stride);
        public static glBindVertexBufferDelegate glBindVertexBuffer;

        public delegate void glBindVertexBuffersDelegate(uint first, int count, uint[] buffers, int[] offsets, int[] strides);
        public static glBindVertexBuffersDelegate glBindVertexBuffers;

        public delegate void glBlendColorDelegate(float red, float green, float blue, float alpha);
        public static glBlendColorDelegate glBlendColor;

        public delegate void glBlendEquationDelegate(BlendEquationMode mode);
        public static glBlendEquationDelegate glBlendEquation;

        public delegate void glBlendEquationSeparateDelegate(BlendEquationMode modeRGB, BlendEquationMode modeAlpha);
        public static glBlendEquationSeparateDelegate glBlendEquationSeparate;

        public delegate void glBlendEquationSeparateiDelegate(uint buf, uint modeRGB, uint modeAlpha);
        public static glBlendEquationSeparateiDelegate glBlendEquationSeparatei;

        public delegate void glBlendEquationiDelegate(uint buf, uint mode);
        public static glBlendEquationiDelegate glBlendEquationi;

        public delegate void glBlendFuncDelegate(BlendingFactor sfactor, BlendingFactor dfactor);
        public static glBlendFuncDelegate glBlendFunc;

        public delegate void glBlendFuncSeparateDelegate(BlendingFactor sfactorRGB, BlendingFactor dfactorRGB, BlendingFactor sfactorAlpha, BlendingFactor dfactorAlpha);
        public static glBlendFuncSeparateDelegate glBlendFuncSeparate;

        public delegate void glBlendFuncSeparateiDelegate(uint buf, uint srcRGB, uint dstRGB, uint srcAlpha, uint dstAlpha);
        public static glBlendFuncSeparateiDelegate glBlendFuncSeparatei;

        public delegate void glBlendFunciDelegate(uint buf, uint src, uint dst);
        public static glBlendFunciDelegate glBlendFunci;

        public delegate void glBlitFramebufferDelegate(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, ClearBufferMask mask, uint filter);
        public static glBlitFramebufferDelegate glBlitFramebuffer;

        public delegate void glBlitNamedFramebufferDelegate(uint readFramebuffer, uint drawFramebuffer, int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, uint filter);
        public static glBlitNamedFramebufferDelegate glBlitNamedFramebuffer;

        public delegate void glBufferDataDelegate(BufferTarget target, int size, IntPtr data, BufferUsage usage);
        public static glBufferDataDelegate glBufferData;

        public delegate void glBufferStorageDelegate(uint target, int size, IntPtr data, uint flags);
        public static glBufferStorageDelegate glBufferStorage;

        public delegate void glBufferSubDataDelegate(BufferTarget target, int offset, int size, IntPtr data);
        public static glBufferSubDataDelegate glBufferSubData;

        public delegate uint glCheckFramebufferStatusDelegate(FramebufferTarget target);
        public static glCheckFramebufferStatusDelegate glCheckFramebufferStatus;

        public delegate uint glCheckNamedFramebufferStatusDelegate(uint framebuffer, uint target);
        public static glCheckNamedFramebufferStatusDelegate glCheckNamedFramebufferStatus;

        public delegate void glClampColorDelegate(ClampColorTarget target, bool clamp);
        public static glClampColorDelegate glClampColor;

        public delegate void glClearDelegate(ClearBufferMask mask);
        public static glClearDelegate glClear;

        public delegate void glClearBufferDataDelegate(uint target, uint internalformat, uint format, uint type, IntPtr data);
        public static glClearBufferDataDelegate glClearBufferData;

        public delegate void glClearBufferSubDataDelegate(uint target, uint internalformat, int offset, int size, uint format, uint type, IntPtr data);
        public static glClearBufferSubDataDelegate glClearBufferSubData;

        public delegate void glClearBufferfiDelegate(uint buffer, int drawbuffer, float depth, int stencil);
        public static glClearBufferfiDelegate glClearBufferfi;

        public delegate void glClearBufferfvDelegate(uint buffer, int drawbuffer, float[] value);
        public static glClearBufferfvDelegate glClearBufferfv;

        public delegate void glClearBufferivDelegate(uint buffer, int drawbuffer, int[] value);
        public static glClearBufferivDelegate glClearBufferiv;

        public delegate void glClearBufferuivDelegate(uint buffer, int drawbuffer, uint[] value);
        public static glClearBufferuivDelegate glClearBufferuiv;

        public delegate void glClearColorDelegate(float red, float green, float blue, float alpha);
        public static glClearColorDelegate glClearColor;

        public delegate void glClearDepthDelegate(double depth);
        public static glClearDepthDelegate glClearDepth;

        public delegate void glClearDepthfDelegate(float d);
        public static glClearDepthfDelegate glClearDepthf;

        public delegate void glClearNamedBufferDataDelegate(uint buffer, uint internalformat, uint format, uint type, IntPtr data);
        public static glClearNamedBufferDataDelegate glClearNamedBufferData;

        public delegate void glClearNamedBufferSubDataDelegate(uint buffer, uint internalformat, int offset, int size, uint format, uint type, IntPtr data);
        public static glClearNamedBufferSubDataDelegate glClearNamedBufferSubData;

        public delegate void glClearNamedFramebufferfiDelegate(uint framebuffer, uint buffer, int drawbuffer, float depth, int stencil);
        public static glClearNamedFramebufferfiDelegate glClearNamedFramebufferfi;

        public delegate void glClearNamedFramebufferfvDelegate(uint framebuffer, uint buffer, int drawbuffer, ref float value);
        public static glClearNamedFramebufferfvDelegate glClearNamedFramebufferfv;

        public delegate void glClearNamedFramebufferivDelegate(uint framebuffer, uint buffer, int drawbuffer, ref int value);
        public static glClearNamedFramebufferivDelegate glClearNamedFramebufferiv;

        public delegate void glClearNamedFramebufferuivDelegate(uint framebuffer, uint buffer, int drawbuffer, ref uint value);
        public static glClearNamedFramebufferuivDelegate glClearNamedFramebufferuiv;

        public delegate void glClearStencilDelegate(int s);
        public static glClearStencilDelegate glClearStencil;

        public delegate void glClearTexImageDelegate(uint texture, int level, uint format, uint type, IntPtr data);
        public static glClearTexImageDelegate glClearTexImage;

        public delegate void glClearTexSubImageDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, IntPtr data);
        public static glClearTexSubImageDelegate glClearTexSubImage;

        public delegate uint glClientWaitSyncDelegate(GLsync sync, uint flags, ulong timeout);
        public static glClientWaitSyncDelegate glClientWaitSync;

        public delegate void glClipControlDelegate(uint origin, uint depth);
        public static glClipControlDelegate glClipControl;

        public delegate void glColorMaskDelegate(bool red, bool green, bool blue, bool alpha);
        public static glColorMaskDelegate glColorMask;

        public delegate void glColorMaskiDelegate(uint index, bool r, bool g, bool b, bool a);
        public static glColorMaskiDelegate glColorMaski;

        public delegate void glCompileShaderDelegate(uint shader);
        public static glCompileShaderDelegate glCompileShader;

        public delegate void glCompressedTexImage1DDelegate(TextureTarget target, int level, PixelInternalFormat internalformat, int width, int border, int imageSize, IntPtr data);
        public static glCompressedTexImage1DDelegate glCompressedTexImage1D;

        public delegate void glCompressedTexImage2DDelegate(TextureTarget target, int level, PixelInternalFormat internalformat, int width, int height, int border, int imageSize, IntPtr data);
        public static glCompressedTexImage2DDelegate glCompressedTexImage2D;

        public delegate void glCompressedTexImage3DDelegate(TextureTarget target, int level, PixelInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, IntPtr data);
        public static glCompressedTexImage3DDelegate glCompressedTexImage3D;

        public delegate void glCompressedTexSubImage1DDelegate(TextureTarget target, int level, int xoffset, int width, PixelFormat format, int imageSize, IntPtr data);
        public static glCompressedTexSubImage1DDelegate glCompressedTexSubImage1D;

        public delegate void glCompressedTexSubImage2DDelegate(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, int imageSize, IntPtr data);
        public static glCompressedTexSubImage2DDelegate glCompressedTexSubImage2D;

        public delegate void glCompressedTexSubImage3DDelegate(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, int imageSize, IntPtr data);
        public static glCompressedTexSubImage3DDelegate glCompressedTexSubImage3D;

        public delegate void glCompressedTextureSubImage1DDelegate(uint texture, int level, int xoffset, int width, uint format, int imageSize, IntPtr data);
        public static glCompressedTextureSubImage1DDelegate glCompressedTextureSubImage1D;

        public delegate void glCompressedTextureSubImage2DDelegate(uint texture, int level, int xoffset, int yoffset, int width, int height, uint format, int imageSize, IntPtr data);
        public static glCompressedTextureSubImage2DDelegate glCompressedTextureSubImage2D;

        public delegate void glCompressedTextureSubImage3DDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, int imageSize, IntPtr data);
        public static glCompressedTextureSubImage3DDelegate glCompressedTextureSubImage3D;

        public delegate void glCopyBufferSubDataDelegate(uint readTarget, uint writeTarget, int readOffset, int writeOffset, int size);
        public static glCopyBufferSubDataDelegate glCopyBufferSubData;

        public delegate void glCopyImageSubDataDelegate(uint srcName, uint srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, uint dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
        public static glCopyImageSubDataDelegate glCopyImageSubData;

        public delegate void glCopyNamedBufferSubDataDelegate(uint readBuffer, uint writeBuffer, int readOffset, int writeOffset, int size);
        public static glCopyNamedBufferSubDataDelegate glCopyNamedBufferSubData;

        public delegate void glCopyTexImage1DDelegate(TextureTarget target, int level, PixelInternalFormat internalformat, int x, int y, int width, int border);
        public static glCopyTexImage1DDelegate glCopyTexImage1D;

        public delegate void glCopyTexImage2DDelegate(TextureTarget target, int level, PixelInternalFormat internalformat, int x, int y, int width, int height, int border);
        public static glCopyTexImage2DDelegate glCopyTexImage2D;

        public delegate void glCopyTexSubImage1DDelegate(TextureTarget target, int level, int xoffset, int x, int y, int width);
        public static glCopyTexSubImage1DDelegate glCopyTexSubImage1D;

        public delegate void glCopyTexSubImage2DDelegate(TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
        public static glCopyTexSubImage2DDelegate glCopyTexSubImage2D;

        public delegate void glCopyTexSubImage3DDelegate(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
        public static glCopyTexSubImage3DDelegate glCopyTexSubImage3D;

        public delegate void glCopyTextureSubImage1DDelegate(uint texture, int level, int xoffset, int x, int y, int width);
        public static glCopyTextureSubImage1DDelegate glCopyTextureSubImage1D;

        public delegate void glCopyTextureSubImage2DDelegate(uint texture, int level, int xoffset, int yoffset, int x, int y, int width, int height);
        public static glCopyTextureSubImage2DDelegate glCopyTextureSubImage2D;

        public delegate void glCopyTextureSubImage3DDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
        public static glCopyTextureSubImage3DDelegate glCopyTextureSubImage3D;

        public delegate void glCreateBuffersDelegate(int n, uint[] buffers);
        public static glCreateBuffersDelegate glCreateBuffers;

        public delegate void glCreateFramebuffersDelegate(int n, uint[] framebuffers);
        public static glCreateFramebuffersDelegate glCreateFramebuffers;

        public delegate uint glCreateProgramDelegate();
        public static glCreateProgramDelegate glCreateProgram;

        public delegate void glCreateProgramPipelinesDelegate(int n, uint[] pipelines);
        public static glCreateProgramPipelinesDelegate glCreateProgramPipelines;

        public delegate void glCreateQueriesDelegate(QueryMode target, int n, uint[] ids);
        public static glCreateQueriesDelegate glCreateQueries;

        public delegate void glCreateRenderbuffersDelegate(int n, uint[] renderbuffers);
        public static glCreateRenderbuffersDelegate glCreateRenderbuffers;

        public delegate void glCreateSamplersDelegate(int n, uint[] samplers);
        public static glCreateSamplersDelegate glCreateSamplers;

        public delegate uint glCreateShaderDelegate(ShaderType type);
        public static glCreateShaderDelegate glCreateShader;

        public delegate uint glCreateShaderProgramvDelegate(ShaderType type, int count, string[] strings);
        public static glCreateShaderProgramvDelegate glCreateShaderProgramv;

        public delegate void glCreateTexturesDelegate(TextureTarget target, int n, uint[] textures);
        public static glCreateTexturesDelegate glCreateTextures;

        public delegate void glCreateTransformFeedbacksDelegate(int n, uint[] ids);
        public static glCreateTransformFeedbacksDelegate glCreateTransformFeedbacks;

        public delegate void glCreateVertexArraysDelegate(int n, uint[] arrays);
        public static glCreateVertexArraysDelegate glCreateVertexArrays;

        public delegate void glCullFaceDelegate(Face mode);
        public static glCullFaceDelegate glCullFace;

        public delegate void glDebugMessageCallbackDelegate(DebugDelegate callback, IntPtr userParam);
        public static glDebugMessageCallbackDelegate glDebugMessageCallback;

        public delegate void glDebugMessageControlDelegate(uint source, uint type, uint severity, int count, uint[] ids, bool enabled);
        public static glDebugMessageControlDelegate glDebugMessageControl;

        public delegate void glDebugMessageInsertDelegate(uint source, uint type, uint id, uint severity, int length, string buf);
        public static glDebugMessageInsertDelegate glDebugMessageInsert;

        public delegate void glDeleteBuffersDelegate(int n, uint[] buffers);
        public static glDeleteBuffersDelegate glDeleteBuffers;

        public delegate void glDeleteFramebuffersDelegate(int n, uint[] framebuffers);
        public static glDeleteFramebuffersDelegate glDeleteFramebuffers;

        public delegate void glDeleteProgramDelegate(uint program);
        public static glDeleteProgramDelegate glDeleteProgram;

        public delegate void glDeleteProgramPipelinesDelegate(int n, uint[] pipelines);
        public static glDeleteProgramPipelinesDelegate glDeleteProgramPipelines;

        public delegate void glDeleteQueriesDelegate(int n, uint[] ids);
        public static glDeleteQueriesDelegate glDeleteQueries;

        public delegate void glDeleteRenderbuffersDelegate(int n, uint[] renderbuffers);
        public static glDeleteRenderbuffersDelegate glDeleteRenderbuffers;

        public delegate void glDeleteSamplersDelegate(int count, uint[] samplers);
        public static glDeleteSamplersDelegate glDeleteSamplers;

        public delegate void glDeleteShaderDelegate(uint shader);
        public static glDeleteShaderDelegate glDeleteShader;

        public delegate void glDeleteSyncDelegate(GLsync sync);
        public static glDeleteSyncDelegate glDeleteSync;

        public delegate void glDeleteTexturesDelegate(int n, uint[] textures);
        public static glDeleteTexturesDelegate glDeleteTextures;

        public delegate void glDeleteTransformFeedbacksDelegate(int n, uint[] ids);
        public static glDeleteTransformFeedbacksDelegate glDeleteTransformFeedbacks;

        public delegate void glDeleteVertexArraysDelegate(int n, uint[] arrays);
        public static glDeleteVertexArraysDelegate glDeleteVertexArrays;

        public delegate void glDepthFuncDelegate(DepthFunction func);
        public static glDepthFuncDelegate glDepthFunc;

        public delegate void glDepthMaskDelegate(bool flag);
        public static glDepthMaskDelegate glDepthMask;

        public delegate void glDepthRangeDelegate(double near, double far);
        public static glDepthRangeDelegate glDepthRange;

        public delegate void glDepthRangeArrayvDelegate(uint first, int count, double[] v);
        public static glDepthRangeArrayvDelegate glDepthRangeArrayv;

        public delegate void glDepthRangeIndexedDelegate(uint index, double n, double f);
        public static glDepthRangeIndexedDelegate glDepthRangeIndexed;

        public delegate void glDepthRangefDelegate(float n, float f);
        public static glDepthRangefDelegate glDepthRangef;

        public delegate void glDetachShaderDelegate(uint program, uint shader);
        public static glDetachShaderDelegate glDetachShader;

        public delegate void glDisableDelegate(EnableCap cap);
        public static glDisableDelegate glDisable;

        public delegate void glDisableVertexArrayAttribDelegate(uint vaobj, uint index);
        public static glDisableVertexArrayAttribDelegate glDisableVertexArrayAttrib;

        public delegate void glDisableVertexAttribArrayDelegate(uint index);
        public static glDisableVertexAttribArrayDelegate glDisableVertexAttribArray;

        public delegate void glDisableiDelegate(uint target, uint index);
        public static glDisableiDelegate glDisablei;

        public delegate void glDispatchComputeDelegate(uint num_groups_x, uint num_groups_y, uint num_groups_z);
        public static glDispatchComputeDelegate glDispatchCompute;

        public delegate void glDispatchComputeIndirectDelegate(int indirect);
        public static glDispatchComputeIndirectDelegate glDispatchComputeIndirect;

        public delegate void glDrawArraysDelegate(PrimitiveType mode, int first, int count);
        public static glDrawArraysDelegate glDrawArrays;

        public delegate void glDrawArraysIndirectDelegate(PrimitiveType mode, IntPtr indirect);
        public static glDrawArraysIndirectDelegate glDrawArraysIndirect;

        public delegate void glDrawArraysInstancedDelegate(PrimitiveType mode, int first, int count, int instancecount);
        public static glDrawArraysInstancedDelegate glDrawArraysInstanced;

        public delegate void glDrawArraysInstancedBaseInstanceDelegate(PrimitiveType mode, int first, int count, int instancecount, uint baseinstance);
        public static glDrawArraysInstancedBaseInstanceDelegate glDrawArraysInstancedBaseInstance;

        public delegate void glDrawBufferDelegate(DrawBufferMode buf);
        public static glDrawBufferDelegate glDrawBuffer;

        public delegate void glDrawBuffersDelegate(int n, DrawBufferMode[] bufs);
        public static glDrawBuffersDelegate glDrawBuffers;

        public delegate void glDrawElementsDelegate(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices);
        public static glDrawElementsDelegate glDrawElements;

        public delegate void glDrawElementsBaseVertexDelegate(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int basevertex);
        public static glDrawElementsBaseVertexDelegate glDrawElementsBaseVertex;

        public delegate void glDrawElementsIndirectDelegate(PrimitiveType mode, uint type, IntPtr indirect);
        public static glDrawElementsIndirectDelegate glDrawElementsIndirect;

        public delegate void glDrawElementsInstancedDelegate(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount);
        public static glDrawElementsInstancedDelegate glDrawElementsInstanced;

        public delegate void glDrawElementsInstancedBaseInstanceDelegate(PrimitiveType mode, int count, uint type, IntPtr indices, int instancecount, uint baseinstance);
        public static glDrawElementsInstancedBaseInstanceDelegate glDrawElementsInstancedBaseInstance;

        public delegate void glDrawElementsInstancedBaseVertexDelegate(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount, int basevertex);
        public static glDrawElementsInstancedBaseVertexDelegate glDrawElementsInstancedBaseVertex;

        public delegate void glDrawElementsInstancedBaseVertexBaseInstanceDelegate(PrimitiveType mode, int count, uint type, IntPtr indices, int instancecount, int basevertex, uint baseinstance);
        public static glDrawElementsInstancedBaseVertexBaseInstanceDelegate glDrawElementsInstancedBaseVertexBaseInstance;

        public delegate void glDrawRangeElementsDelegate(PrimitiveType mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices);
        public static glDrawRangeElementsDelegate glDrawRangeElements;

        public delegate void glDrawRangeElementsBaseVertexDelegate(PrimitiveType mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices, int basevertex);
        public static glDrawRangeElementsBaseVertexDelegate glDrawRangeElementsBaseVertex;

        public delegate void glDrawTransformFeedbackDelegate(PrimitiveType mode, uint id);
        public static glDrawTransformFeedbackDelegate glDrawTransformFeedback;

        public delegate void glDrawTransformFeedbackInstancedDelegate(PrimitiveType mode, uint id, int instancecount);
        public static glDrawTransformFeedbackInstancedDelegate glDrawTransformFeedbackInstanced;

        public delegate void glDrawTransformFeedbackStreamDelegate(PrimitiveType mode, uint id, uint stream);
        public static glDrawTransformFeedbackStreamDelegate glDrawTransformFeedbackStream;

        public delegate void glDrawTransformFeedbackStreamInstancedDelegate(PrimitiveType mode, uint id, uint stream, int instancecount);
        public static glDrawTransformFeedbackStreamInstancedDelegate glDrawTransformFeedbackStreamInstanced;

        public delegate void glEnableDelegate(EnableCap cap);
        public static glEnableDelegate glEnable;

        public delegate void glEnableVertexArrayAttribDelegate(uint vaobj, uint index);
        public static glEnableVertexArrayAttribDelegate glEnableVertexArrayAttrib;

        public delegate void glEnableVertexAttribArrayDelegate(uint index);
        public static glEnableVertexAttribArrayDelegate glEnableVertexAttribArray;

        public delegate void glEnableiDelegate(uint target, uint index);
        public static glEnableiDelegate glEnablei;

        public delegate void glEndConditionalRenderDelegate();
        public static glEndConditionalRenderDelegate glEndConditionalRender;

        public delegate void glEndQueryDelegate(uint target);
        public static glEndQueryDelegate glEndQuery;

        public delegate void glEndQueryIndexedDelegate(uint target, uint index);
        public static glEndQueryIndexedDelegate glEndQueryIndexed;

        public delegate void glEndTransformFeedbackDelegate();
        public static glEndTransformFeedbackDelegate glEndTransformFeedback;

        public delegate IntPtr glFenceSyncDelegate(uint condition, uint flags);
        public static glFenceSyncDelegate glFenceSync;

        public delegate void glFinishDelegate();
        public static glFinishDelegate glFinish;

        public delegate void glFlushDelegate();
        public static glFlushDelegate glFlush;

        public delegate void glFlushMappedBufferRangeDelegate(BufferTarget target, int offset, int length);
        public static glFlushMappedBufferRangeDelegate glFlushMappedBufferRange;

        public delegate void glFlushMappedNamedBufferRangeDelegate(uint buffer, int offset, int length);
        public static glFlushMappedNamedBufferRangeDelegate glFlushMappedNamedBufferRange;

        public delegate void glFramebufferParameteriDelegate(uint target, uint pname, int param);
        public static glFramebufferParameteriDelegate glFramebufferParameteri;

        public delegate void glFramebufferRenderbufferDelegate(FramebufferTarget target, FramebufferAttachment attachment, RenderbufferTarget renderbuffertarget, uint renderbuffer);
        public static glFramebufferRenderbufferDelegate glFramebufferRenderbuffer;

        public delegate void glFramebufferTextureDelegate(uint target, uint attachment, uint texture, int level);
        public static glFramebufferTextureDelegate glFramebufferTexture;

        public delegate void glFramebufferTexture1DDelegate(FramebufferTarget target, FramebufferAttachment attachment, uint textarget, uint texture, int level);
        public static glFramebufferTexture1DDelegate glFramebufferTexture1D;

        public delegate void glFramebufferTexture2DDelegate(FramebufferTarget target, FramebufferAttachment attachment, uint textarget, uint texture, int level);
        public static glFramebufferTexture2DDelegate glFramebufferTexture2D;

        public delegate void glFramebufferTexture3DDelegate(FramebufferTarget target, FramebufferAttachment attachment, uint textarget, uint texture, int level, int zoffset);
        public static glFramebufferTexture3DDelegate glFramebufferTexture3D;

        public delegate void glFramebufferTextureLayerDelegate(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, int layer);
        public static glFramebufferTextureLayerDelegate glFramebufferTextureLayer;

        public delegate void glFrontFaceDelegate(FrontFaceDirection mode);
        public static glFrontFaceDelegate glFrontFace;

        public delegate void glGenBuffersDelegate(int n, uint[] buffers);
        public static glGenBuffersDelegate glGenBuffers;

        public delegate void glGenFramebuffersDelegate(int n, uint[] framebuffers);
        public static glGenFramebuffersDelegate glGenFramebuffers;

        public delegate void glGenProgramPipelinesDelegate(int n, uint[] pipelines);
        public static glGenProgramPipelinesDelegate glGenProgramPipelines;

        public delegate void glGenQueriesDelegate(int n, uint[] ids);
        public static glGenQueriesDelegate glGenQueries;

        public delegate void glGenRenderbuffersDelegate(int n, uint[] renderbuffers);
        public static glGenRenderbuffersDelegate glGenRenderbuffers;

        public delegate void glGenSamplersDelegate(int count, uint[] samplers);
        public static glGenSamplersDelegate glGenSamplers;

        public delegate void glGenTexturesDelegate(int n, uint[] textures);
        public static glGenTexturesDelegate glGenTextures;

        public delegate void glGenTransformFeedbacksDelegate(int n, uint[] ids);
        public static glGenTransformFeedbacksDelegate glGenTransformFeedbacks;

        public delegate void glGenVertexArraysDelegate(int n, uint[] arrays);
        public static glGenVertexArraysDelegate glGenVertexArrays;

        public delegate void glGenerateMipmapDelegate(uint target);
        public static glGenerateMipmapDelegate glGenerateMipmap;

        public delegate void glGenerateTextureMipmapDelegate(uint texture);
        public static glGenerateTextureMipmapDelegate glGenerateTextureMipmap;

        public delegate void glGetActiveAtomicCounterBufferivDelegate(uint program, uint bufferIndex, uint pname, int[] _params);
        public static glGetActiveAtomicCounterBufferivDelegate glGetActiveAtomicCounterBufferiv;

        public delegate void glGetActiveAttribDelegate(uint program, uint index, int bufSize, ref int length, ref int size, ref uint type, StringBuilder name);
        public static glGetActiveAttribDelegate glGetActiveAttrib;

        public delegate void glGetActiveSubroutineNameDelegate(uint program, uint shadertype, uint index, int bufsize, ref int length, StringBuilder name);
        public static glGetActiveSubroutineNameDelegate glGetActiveSubroutineName;

        public delegate void glGetActiveSubroutineUniformNameDelegate(uint program, uint shadertype, uint index, int bufsize, ref int length, StringBuilder name);
        public static glGetActiveSubroutineUniformNameDelegate glGetActiveSubroutineUniformName;

        public delegate void glGetActiveSubroutineUniformivDelegate(uint program, uint shadertype, uint index, uint pname, int[] values);
        public static glGetActiveSubroutineUniformivDelegate glGetActiveSubroutineUniformiv;

        public delegate void glGetActiveUniformDelegate(uint program, uint index, int bufSize, ref int length, ref int size, ref uint type, StringBuilder name);
        public static glGetActiveUniformDelegate glGetActiveUniform;

        public delegate void glGetActiveUniformBlockNameDelegate(uint program, uint uniformBlockIndex, int bufSize, ref int length, StringBuilder uniformBlockName);
        public static glGetActiveUniformBlockNameDelegate glGetActiveUniformBlockName;

        public delegate void glGetActiveUniformBlockivDelegate(uint program, uint uniformBlockIndex, uint pname, int[] _params);
        public static glGetActiveUniformBlockivDelegate glGetActiveUniformBlockiv;

        public delegate void glGetActiveUniformNameDelegate(uint program, uint uniformIndex, int bufSize, ref int length, StringBuilder uniformName);
        public static glGetActiveUniformNameDelegate glGetActiveUniformName;

        public delegate void glGetActiveUniformsivDelegate(uint program, int uniformCount, uint[] uniformIndices, uint pname, int[] _params);
        public static glGetActiveUniformsivDelegate glGetActiveUniformsiv;

        public delegate void glGetAttachedShadersDelegate(uint program, int maxCount, ref int count, uint[] shaders);
        public static glGetAttachedShadersDelegate glGetAttachedShaders;

        public delegate int glGetAttribLocationDelegate(uint program, string name);
        public static glGetAttribLocationDelegate glGetAttribLocation;

        public delegate void glGetBooleani_vDelegate(uint target, uint index, bool[] data);
        public static glGetBooleani_vDelegate glGetBooleani_v;

        public delegate void glGetBooleanvDelegate(GetPName pname, bool[] data);
        public static glGetBooleanvDelegate glGetBooleanv;

        public delegate void glGetBufferParameteri64vDelegate(BufferTarget target, BufferPName pname, long[] _params);
        public static glGetBufferParameteri64vDelegate glGetBufferParameteri64v;

        public delegate void glGetBufferParameterivDelegate(BufferTarget target, BufferPName pname, int[] _params);
        public static glGetBufferParameterivDelegate glGetBufferParameteriv;

        public delegate void glGetBufferPointervDelegate(BufferTarget target, BufferPName pname, IntPtr _params);
        public static glGetBufferPointervDelegate glGetBufferPointerv;

        public delegate void glGetBufferSubDataDelegate(BufferTarget target, int offset, int size, IntPtr data);
        public static glGetBufferSubDataDelegate glGetBufferSubData;

        public delegate void glGetCompressedTexImageDelegate(TextureTarget target, int level, IntPtr img);
        public static glGetCompressedTexImageDelegate glGetCompressedTexImage;

        public delegate void glGetCompressedTextureImageDelegate(uint texture, int level, int bufSize, IntPtr pixels);
        public static glGetCompressedTextureImageDelegate glGetCompressedTextureImage;

        public delegate void glGetCompressedTextureSubImageDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int bufSize, IntPtr pixels);
        public static glGetCompressedTextureSubImageDelegate glGetCompressedTextureSubImage;

        public delegate uint glGetDebugMessageLogDelegate(uint count, int bufSize, uint[] sources, uint[] types, uint[] ids, uint[] severities, int[] lengths, StringBuilder messageLog);
        public static glGetDebugMessageLogDelegate glGetDebugMessageLog;

        public delegate void glGetDoublei_vDelegate(uint target, uint index, double[] data);
        public static glGetDoublei_vDelegate glGetDoublei_v;

        public delegate void glGetDoublevDelegate(GetPName pname, double[] data);
        public static glGetDoublevDelegate glGetDoublev;

        public delegate uint glGetErrorDelegate();
        public static glGetErrorDelegate glGetError;

        public delegate void glGetFloati_vDelegate(TypeEnum target, uint index, float[] data);
        public static glGetFloati_vDelegate glGetFloati_v;

        public delegate void glGetFloatvDelegate(GetPName pname, float[] data);
        public static glGetFloatvDelegate glGetFloatv;

        public delegate int glGetFragDataIndexDelegate(uint program, string name);
        public static glGetFragDataIndexDelegate glGetFragDataIndex;

        public delegate int glGetFragDataLocationDelegate(uint program, string name);
        public static glGetFragDataLocationDelegate glGetFragDataLocation;

        public delegate void glGetFramebufferAttachmentParameterivDelegate(FramebufferTarget target, FramebufferAttachment attachment, uint pname, int[] _params);
        public static glGetFramebufferAttachmentParameterivDelegate glGetFramebufferAttachmentParameteriv;

        public delegate void glGetFramebufferParameterivDelegate(uint target, uint pname, int[] _params);
        public static glGetFramebufferParameterivDelegate glGetFramebufferParameteriv;

        public delegate uint glGetGraphicsResetStatusDelegate();
        public static glGetGraphicsResetStatusDelegate glGetGraphicsResetStatus;

        public delegate void glGetInteger64i_vDelegate(uint target, uint index, long[] data);
        public static glGetInteger64i_vDelegate glGetInteger64i_v;

        public delegate void glGetInteger64vDelegate(uint pname, long[] data);
        public static glGetInteger64vDelegate glGetInteger64v;

        public delegate void glGetIntegeri_vDelegate(uint target, uint index, int[] data);
        public static glGetIntegeri_vDelegate glGetIntegeri_v;

        public delegate void glGetIntegervDelegate(GetPName pname, int[] data);
        public static glGetIntegervDelegate glGetIntegerv;

        public delegate void glGetInternalformati64vDelegate(uint target, uint internalformat, uint pname, int bufSize, long[] _params);
        public static glGetInternalformati64vDelegate glGetInternalformati64v;

        public delegate void glGetInternalformativDelegate(uint target, uint internalformat, uint pname, int bufSize, int[] _params);
        public static glGetInternalformativDelegate glGetInternalformativ;

        public delegate void glGetMultisamplefvDelegate(uint pname, uint index, float[] val);
        public static glGetMultisamplefvDelegate glGetMultisamplefv;

        public delegate void glGetNamedBufferParameteri64vDelegate(uint buffer, BufferPName pname, out long _params);
        public static glGetNamedBufferParameteri64vDelegate glGetNamedBufferParameteri64v;

        public delegate void glGetNamedBufferParameterivDelegate(uint buffer, BufferPName pname, out int _params);
        public static glGetNamedBufferParameterivDelegate glGetNamedBufferParameteriv;

        public delegate void glGetNamedBufferPointervDelegate(uint buffer, uint pname, IntPtr _params);
        public static glGetNamedBufferPointervDelegate glGetNamedBufferPointerv;

        public delegate void glGetNamedBufferSubDataDelegate(uint buffer, int offset, int size, IntPtr data);
        public static glGetNamedBufferSubDataDelegate glGetNamedBufferSubData;

        public delegate void glGetNamedFramebufferAttachmentParameterivDelegate(uint framebuffer, uint attachment, uint pname, out int _params);
        public static glGetNamedFramebufferAttachmentParameterivDelegate glGetNamedFramebufferAttachmentParameteriv;

        public delegate void glGetNamedFramebufferParameterivDelegate(uint framebuffer, uint pname, out int param);
        public static glGetNamedFramebufferParameterivDelegate glGetNamedFramebufferParameteriv;

        public delegate void glGetNamedRenderbufferParameterivDelegate(uint renderbuffer, uint pname, out int _params);
        public static glGetNamedRenderbufferParameterivDelegate glGetNamedRenderbufferParameteriv;

        public delegate void glGetObjectLabelDelegate(uint identifier, uint name, int bufSize, ref int length, StringBuilder label);
        public static glGetObjectLabelDelegate glGetObjectLabel;

        public delegate void glGetObjectPtrLabelDelegate(IntPtr ptr, int bufSize, ref int length, StringBuilder label);
        public static glGetObjectPtrLabelDelegate glGetObjectPtrLabel;

        public delegate void glGetPointervDelegate(GetPointervPName pname, IntPtr _params);
        public static glGetPointervDelegate glGetPointerv;

        public delegate void glGetProgramBinaryDelegate(uint program, int bufSize, ref int length, ref uint binaryFormat, IntPtr binary);
        public static glGetProgramBinaryDelegate glGetProgramBinary;

        public delegate void glGetProgramInfoLogDelegate(uint program, int bufSize, ref int length, StringBuilder infoLog);
        public static glGetProgramInfoLogDelegate glGetProgramInfoLog;

        public delegate void glGetProgramInterfaceivDelegate(uint program, uint programInterface, uint pname, int[] _params);
        public static glGetProgramInterfaceivDelegate glGetProgramInterfaceiv;

        public delegate void glGetProgramPipelineInfoLogDelegate(uint pipeline, int bufSize, ref int length, StringBuilder infoLog);
        public static glGetProgramPipelineInfoLogDelegate glGetProgramPipelineInfoLog;

        public delegate void glGetProgramPipelineivDelegate(uint pipeline, uint pname, int[] _params);
        public static glGetProgramPipelineivDelegate glGetProgramPipelineiv;

        public delegate uint glGetProgramResourceIndexDelegate(uint program, uint programInterface, string name);
        public static glGetProgramResourceIndexDelegate glGetProgramResourceIndex;

        public delegate int glGetProgramResourceLocationDelegate(uint program, uint programInterface, string name);
        public static glGetProgramResourceLocationDelegate glGetProgramResourceLocation;

        public delegate int glGetProgramResourceLocationIndexDelegate(uint program, uint programInterface, string name);
        public static glGetProgramResourceLocationIndexDelegate glGetProgramResourceLocationIndex;

        public delegate void glGetProgramResourceNameDelegate(uint program, uint programInterface, uint index, int bufSize, ref int length, StringBuilder name);
        public static glGetProgramResourceNameDelegate glGetProgramResourceName;

        public delegate void glGetProgramResourceivDelegate(uint program, uint programInterface, uint index, int propCount, uint[] props, int bufSize, ref int length, int[] _params);
        public static glGetProgramResourceivDelegate glGetProgramResourceiv;

        public delegate void glGetProgramStageivDelegate(uint program, uint shadertype, uint pname, ref int values);
        public static glGetProgramStageivDelegate glGetProgramStageiv;

        public delegate void glGetProgramivDelegate(uint program, ProgramParameter pname, int[] _params);
        public static glGetProgramivDelegate glGetProgramiv;

        public delegate void glGetQueryBufferObjecti64vDelegate(uint id, uint buffer, uint pname, int offset);
        public static glGetQueryBufferObjecti64vDelegate glGetQueryBufferObjecti64v;

        public delegate void glGetQueryBufferObjectivDelegate(uint id, uint buffer, uint pname, int offset);
        public static glGetQueryBufferObjectivDelegate glGetQueryBufferObjectiv;

        public delegate void glGetQueryBufferObjectui64vDelegate(uint id, uint buffer, uint pname, int offset);
        public static glGetQueryBufferObjectui64vDelegate glGetQueryBufferObjectui64v;

        public delegate void glGetQueryBufferObjectuivDelegate(uint id, uint buffer, uint pname, int offset);
        public static glGetQueryBufferObjectuivDelegate glGetQueryBufferObjectuiv;

        public delegate void glGetQueryIndexedivDelegate(uint target, uint index, uint pname, int[] _params);
        public static glGetQueryIndexedivDelegate glGetQueryIndexediv;

        public delegate void glGetQueryObjecti64vDelegate(uint id, uint pname, long[] _params);
        public static glGetQueryObjecti64vDelegate glGetQueryObjecti64v;

        public delegate void glGetQueryObjectivDelegate(uint id, uint pname, int[] _params);
        public static glGetQueryObjectivDelegate glGetQueryObjectiv;

        public delegate void glGetQueryObjectui64vDelegate(uint id, uint pname, ulong[] _params);
        public static glGetQueryObjectui64vDelegate glGetQueryObjectui64v;

        public delegate void glGetQueryObjectuivDelegate(uint id, uint pname, uint[] _params);
        public static glGetQueryObjectuivDelegate glGetQueryObjectuiv;

        public delegate void glGetQueryivDelegate(uint target, uint pname, int[] _params);
        public static glGetQueryivDelegate glGetQueryiv;

        public delegate void glGetRenderbufferParameterivDelegate(RenderbufferTarget target, uint pname, int[] _params);
        public static glGetRenderbufferParameterivDelegate glGetRenderbufferParameteriv;

        public delegate void glGetSamplerParameterIivDelegate(uint sampler, uint pname, int[] _params);
        public static glGetSamplerParameterIivDelegate glGetSamplerParameterIiv;

        public delegate void glGetSamplerParameterIuivDelegate(uint sampler, uint pname, uint[] _params);
        public static glGetSamplerParameterIuivDelegate glGetSamplerParameterIuiv;

        public delegate void glGetSamplerParameterfvDelegate(uint sampler, uint pname, float[] _params);
        public static glGetSamplerParameterfvDelegate glGetSamplerParameterfv;

        public delegate void glGetSamplerParameterivDelegate(uint sampler, uint pname, int[] _params);
        public static glGetSamplerParameterivDelegate glGetSamplerParameteriv;

        public delegate void glGetShaderInfoLogDelegate(uint shader, int bufSize, ref int length, StringBuilder infoLog);
        public static glGetShaderInfoLogDelegate glGetShaderInfoLog;

        public delegate void glGetShaderPrecisionFormatDelegate(uint shadertype, uint precisiontype, int[] range, int[] precision);
        public static glGetShaderPrecisionFormatDelegate glGetShaderPrecisionFormat;

        public delegate void glGetShaderSourceDelegate(uint shader, int bufSize, ref int length, StringBuilder source);
        public static glGetShaderSourceDelegate glGetShaderSource;

        public delegate void glGetShaderivDelegate(uint shader, ShaderParameter pname, int[] _params);
        public static glGetShaderivDelegate glGetShaderiv;

        public delegate byte glGetStringDelegate(StringName name);
        public static glGetStringDelegate glGetString;

        public delegate byte glGetStringiDelegate(uint name, uint index);
        public static glGetStringiDelegate glGetStringi;

        public delegate uint glGetSubroutineIndexDelegate(uint program, uint shadertype, string name);
        public static glGetSubroutineIndexDelegate glGetSubroutineIndex;

        public delegate int glGetSubroutineUniformLocationDelegate(uint program, uint shadertype, string name);
        public static glGetSubroutineUniformLocationDelegate glGetSubroutineUniformLocation;

        public delegate void glGetSyncivDelegate(GLsync sync, uint pname, int bufSize, ref int length, int[] values);
        public static glGetSyncivDelegate glGetSynciv;

        public delegate void glGetTexImageDelegate(TextureTarget target, int level, PixelFormat format, PixelType type, IntPtr pixels);
        public static glGetTexImageDelegate glGetTexImage;

        public delegate void glGetTexLevelParameterfvDelegate(TextureTarget target, int level, GetTextureParameter pname, float[] _params);
        public static glGetTexLevelParameterfvDelegate glGetTexLevelParameterfv;

        public delegate void glGetTexLevelParameterivDelegate(TextureTarget target, int level, GetTextureParameter pname, int[] _params);
        public static glGetTexLevelParameterivDelegate glGetTexLevelParameteriv;

        public delegate void glGetTexParameterIivDelegate(TextureTarget target, GetTextureParameter pname, int[] _params);
        public static glGetTexParameterIivDelegate glGetTexParameterIiv;

        public delegate void glGetTexParameterIuivDelegate(TextureTarget target, GetTextureParameter pname, uint[] _params);
        public static glGetTexParameterIuivDelegate glGetTexParameterIuiv;

        public delegate void glGetTexParameterfvDelegate(TextureTarget target, GetTextureParameter pname, float[] _params);
        public static glGetTexParameterfvDelegate glGetTexParameterfv;

        public delegate void glGetTexParameterivDelegate(TextureTarget target, GetTextureParameter pname, int[] _params);
        public static glGetTexParameterivDelegate glGetTexParameteriv;

        public delegate void glGetTextureImageDelegate(uint texture, int level, uint format, uint type, int bufSize, IntPtr pixels);
        public static glGetTextureImageDelegate glGetTextureImage;

        public delegate void glGetTextureLevelParameterfvDelegate(uint texture, int level, uint pname, out float _params);
        public static glGetTextureLevelParameterfvDelegate glGetTextureLevelParameterfv;

        public delegate void glGetTextureLevelParameterivDelegate(uint texture, int level, uint pname, out int _params);
        public static glGetTextureLevelParameterivDelegate glGetTextureLevelParameteriv;

        public delegate void glGetTextureParameterIivDelegate(uint texture, uint pname, out int _params);
        public static glGetTextureParameterIivDelegate glGetTextureParameterIiv;

        public delegate void glGetTextureParameterIuivDelegate(uint texture, uint pname, out uint _params);
        public static glGetTextureParameterIuivDelegate glGetTextureParameterIuiv;

        public delegate void glGetTextureParameterfvDelegate(uint texture, uint pname, out float _params);
        public static glGetTextureParameterfvDelegate glGetTextureParameterfv;

        public delegate void glGetTextureParameterivDelegate(uint texture, uint pname, out int _params);
        public static glGetTextureParameterivDelegate glGetTextureParameteriv;

        public delegate void glGetTextureSubImageDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, int bufSize, IntPtr pixels);
        public static glGetTextureSubImageDelegate glGetTextureSubImage;

        public delegate void glGetTransformFeedbackVaryingDelegate(uint program, uint index, int bufSize, ref int length, ref int size, ref uint type, StringBuilder name);
        public static glGetTransformFeedbackVaryingDelegate glGetTransformFeedbackVarying;

        public delegate void glGetTransformFeedbacki64_vDelegate(uint xfb, uint pname, uint index, out long param);
        public static glGetTransformFeedbacki64_vDelegate glGetTransformFeedbacki64_v;

        public delegate void glGetTransformFeedbacki_vDelegate(uint xfb, uint pname, uint index, out int param);
        public static glGetTransformFeedbacki_vDelegate glGetTransformFeedbacki_v;

        public delegate void glGetTransformFeedbackivDelegate(uint xfb, uint pname, out int param);
        public static glGetTransformFeedbackivDelegate glGetTransformFeedbackiv;

        public delegate uint glGetUniformBlockIndexDelegate(uint program, string uniformBlockName);
        public static glGetUniformBlockIndexDelegate glGetUniformBlockIndex;

        public delegate void glGetUniformIndicesDelegate(uint program, int uniformCount, string[] uniformNames, uint[] uniformIndices);
        public static glGetUniformIndicesDelegate glGetUniformIndices;

        public delegate int glGetUniformLocationDelegate(uint program, string name);
        public static glGetUniformLocationDelegate glGetUniformLocation;

        public delegate void glGetUniformSubroutineuivDelegate(uint shadertype, int location, ref uint _params);
        public static glGetUniformSubroutineuivDelegate glGetUniformSubroutineuiv;

        public delegate void glGetUniformdvDelegate(uint program, int location, double[] _params);
        public static glGetUniformdvDelegate glGetUniformdv;

        public delegate void glGetUniformfvDelegate(uint program, int location, float[] _params);
        public static glGetUniformfvDelegate glGetUniformfv;

        public delegate void glGetUniformivDelegate(uint program, int location, int[] _params);
        public static glGetUniformivDelegate glGetUniformiv;

        public delegate void glGetUniformuivDelegate(uint program, int location, uint[] _params);
        public static glGetUniformuivDelegate glGetUniformuiv;

        public delegate void glGetVertexArrayIndexed64ivDelegate(uint vaobj, uint index, uint pname, out long param);
        public static glGetVertexArrayIndexed64ivDelegate glGetVertexArrayIndexed64iv;

        public delegate void glGetVertexArrayIndexedivDelegate(uint vaobj, uint index, uint pname, out int param);
        public static glGetVertexArrayIndexedivDelegate glGetVertexArrayIndexediv;

        public delegate void glGetVertexArrayivDelegate(uint vaobj, uint pname, out int param);
        public static glGetVertexArrayivDelegate glGetVertexArrayiv;

        public delegate void glGetVertexAttribIivDelegate(uint index, VertexAttribEnum pname, ref int _params);
        public static glGetVertexAttribIivDelegate glGetVertexAttribIiv;

        public delegate void glGetVertexAttribIuivDelegate(uint index, VertexAttribEnum pname, ref uint _params);
        public static glGetVertexAttribIuivDelegate glGetVertexAttribIuiv;

        public delegate void glGetVertexAttribLdvDelegate(uint index, uint pname, double[] _params);
        public static glGetVertexAttribLdvDelegate glGetVertexAttribLdv;

        public delegate void glGetVertexAttribPointervDelegate(uint index, VertexAttribPointerProperty pname, IntPtr pointer);
        public static glGetVertexAttribPointervDelegate glGetVertexAttribPointerv;

        public delegate void glGetVertexAttribdvDelegate(uint index, VertexAttribProperty pname, double[] _params);
        public static glGetVertexAttribdvDelegate glGetVertexAttribdv;

        public delegate void glGetVertexAttribfvDelegate(uint index, VertexAttribProperty pname, float[] _params);
        public static glGetVertexAttribfvDelegate glGetVertexAttribfv;

        public delegate void glGetVertexAttribivDelegate(uint index, VertexAttribProperty pname, int[] _params);
        public static glGetVertexAttribivDelegate glGetVertexAttribiv;

        public delegate void glGetnCompressedTexImageDelegate(uint target, int lod, int bufSize, IntPtr pixels);
        public static glGetnCompressedTexImageDelegate glGetnCompressedTexImage;

        public delegate void glGetnTexImageDelegate(uint target, int level, uint format, uint type, int bufSize, IntPtr pixels);
        public static glGetnTexImageDelegate glGetnTexImage;

        public delegate void glGetnUniformdvDelegate(uint program, int location, int bufSize, out double _params);
        public static glGetnUniformdvDelegate glGetnUniformdv;

        public delegate void glGetnUniformfvDelegate(uint program, int location, int bufSize, out float _params);
        public static glGetnUniformfvDelegate glGetnUniformfv;

        public delegate void glGetnUniformivDelegate(uint program, int location, int bufSize, out int _params);
        public static glGetnUniformivDelegate glGetnUniformiv;

        public delegate void glGetnUniformuivDelegate(uint program, int location, int bufSize, out uint _params);
        public static glGetnUniformuivDelegate glGetnUniformuiv;

        public delegate void glHintDelegate(HintTarget target, HintMode mode);
        public static glHintDelegate glHint;

        public delegate void glInvalidateBufferDataDelegate(uint buffer);
        public static glInvalidateBufferDataDelegate glInvalidateBufferData;

        public delegate void glInvalidateBufferSubDataDelegate(uint buffer, int offset, int length);
        public static glInvalidateBufferSubDataDelegate glInvalidateBufferSubData;

        public delegate void glInvalidateFramebufferDelegate(uint target, int numAttachments, uint[] attachments);
        public static glInvalidateFramebufferDelegate glInvalidateFramebuffer;

        public delegate void glInvalidateNamedFramebufferDataDelegate(uint framebuffer, int numAttachments, ref uint attachments);
        public static glInvalidateNamedFramebufferDataDelegate glInvalidateNamedFramebufferData;

        public delegate void glInvalidateNamedFramebufferSubDataDelegate(uint framebuffer, int numAttachments, ref uint attachments, int x, int y, int width, int height);
        public static glInvalidateNamedFramebufferSubDataDelegate glInvalidateNamedFramebufferSubData;

        public delegate void glInvalidateSubFramebufferDelegate(uint target, int numAttachments, uint[] attachments, int x, int y, int width, int height);
        public static glInvalidateSubFramebufferDelegate glInvalidateSubFramebuffer;

        public delegate void glInvalidateTexImageDelegate(uint texture, int level);
        public static glInvalidateTexImageDelegate glInvalidateTexImage;

        public delegate void glInvalidateTexSubImageDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth);
        public static glInvalidateTexSubImageDelegate glInvalidateTexSubImage;

        public delegate bool glIsBufferDelegate(uint buffer);
        public static glIsBufferDelegate glIsBuffer;

        public delegate bool glIsEnabledDelegate(EnableCap cap);
        public static glIsEnabledDelegate glIsEnabled;

        public delegate bool glIsEnablediDelegate(uint target, uint index);
        public static glIsEnablediDelegate glIsEnabledi;

        public delegate bool glIsFramebufferDelegate(uint framebuffer);
        public static glIsFramebufferDelegate glIsFramebuffer;

        public delegate bool glIsProgramDelegate(uint program);
        public static glIsProgramDelegate glIsProgram;

        public delegate bool glIsProgramPipelineDelegate(uint pipeline);
        public static glIsProgramPipelineDelegate glIsProgramPipeline;

        public delegate bool glIsQueryDelegate(uint id);
        public static glIsQueryDelegate glIsQuery;

        public delegate bool glIsRenderbufferDelegate(uint renderbuffer);
        public static glIsRenderbufferDelegate glIsRenderbuffer;

        public delegate bool glIsSamplerDelegate(uint sampler);
        public static glIsSamplerDelegate glIsSampler;

        public delegate bool glIsShaderDelegate(uint shader);
        public static glIsShaderDelegate glIsShader;

        public delegate bool glIsSyncDelegate(GLsync sync);
        public static glIsSyncDelegate glIsSync;

        public delegate bool glIsTextureDelegate(uint texture);
        public static glIsTextureDelegate glIsTexture;

        public delegate bool glIsTransformFeedbackDelegate(uint id);
        public static glIsTransformFeedbackDelegate glIsTransformFeedback;

        public delegate bool glIsVertexArrayDelegate(uint array);
        public static glIsVertexArrayDelegate glIsVertexArray;

        public delegate void glLineWidthDelegate(float width);
        public static glLineWidthDelegate glLineWidth;

        public delegate void glLinkProgramDelegate(uint program);
        public static glLinkProgramDelegate glLinkProgram;

        public delegate void glLogicOpDelegate(LogicOp opcode);
        public static glLogicOpDelegate glLogicOp;

        public delegate IntPtr glMapBufferDelegate(BufferTarget target, BufferAccessMask access);
        public static glMapBufferDelegate glMapBuffer;

        public delegate IntPtr glMapBufferRangeDelegate(BufferTarget target, int offset, int length, BufferAccessMask access);
        public static glMapBufferRangeDelegate glMapBufferRange;

        public delegate IntPtr glMapNamedBufferDelegate(uint buffer, BufferAccessMask access);
        public static glMapNamedBufferDelegate glMapNamedBuffer;

        public delegate IntPtr glMapNamedBufferRangeDelegate(uint buffer, int offset, int length, BufferAccessMask access);
        public static glMapNamedBufferRangeDelegate glMapNamedBufferRange;

        public delegate void glMemoryBarrierDelegate(uint barriers);
        public static glMemoryBarrierDelegate glMemoryBarrier;

        public delegate void glMemoryBarrierByRegionDelegate(uint barriers);
        public static glMemoryBarrierByRegionDelegate glMemoryBarrierByRegion;

        public delegate void glMinSampleShadingDelegate(float value);
        public static glMinSampleShadingDelegate glMinSampleShading;

        public delegate void glMultiDrawArraysDelegate(PrimitiveType mode, int[] first, int[] count, int drawcount);
        public static glMultiDrawArraysDelegate glMultiDrawArrays;

        public delegate void glMultiDrawArraysIndirectDelegate(uint mode, IntPtr indirect, int drawcount, int stride);
        public static glMultiDrawArraysIndirectDelegate glMultiDrawArraysIndirect;

        public delegate void glMultiDrawElementsDelegate(PrimitiveType mode, int[] count, DrawElementsType type, IntPtr indices, int drawcount);
        public static glMultiDrawElementsDelegate glMultiDrawElements;

        public delegate void glMultiDrawElementsBaseVertexDelegate(uint mode, int[] count, DrawElementsType type, IntPtr indices, int drawcount, int[] basevertex);
        public static glMultiDrawElementsBaseVertexDelegate glMultiDrawElementsBaseVertex;

        public delegate void glMultiDrawElementsIndirectDelegate(uint mode, uint type, IntPtr indirect, int drawcount, int stride);
        public static glMultiDrawElementsIndirectDelegate glMultiDrawElementsIndirect;

        public delegate void glNamedBufferDataDelegate(uint buffer, int size, IntPtr data, BufferUsage usage);
        public static glNamedBufferDataDelegate glNamedBufferData;

        public delegate void glNamedBufferStorageDelegate(uint buffer, int size, IntPtr data, uint flags);
        public static glNamedBufferStorageDelegate glNamedBufferStorage;

        public delegate void glNamedBufferSubDataDelegate(uint buffer, int offset, int size, IntPtr data);
        public static glNamedBufferSubDataDelegate glNamedBufferSubData;

        public delegate void glNamedFramebufferDrawBufferDelegate(uint framebuffer, uint buf);
        public static glNamedFramebufferDrawBufferDelegate glNamedFramebufferDrawBuffer;

        public delegate void glNamedFramebufferDrawBuffersDelegate(uint framebuffer, int n, ref uint bufs);
        public static glNamedFramebufferDrawBuffersDelegate glNamedFramebufferDrawBuffers;

        public delegate void glNamedFramebufferParameteriDelegate(uint framebuffer, uint pname, int param);
        public static glNamedFramebufferParameteriDelegate glNamedFramebufferParameteri;

        public delegate void glNamedFramebufferReadBufferDelegate(uint framebuffer, uint src);
        public static glNamedFramebufferReadBufferDelegate glNamedFramebufferReadBuffer;

        public delegate void glNamedFramebufferRenderbufferDelegate(uint framebuffer, uint attachment, uint renderbuffertarget, uint renderbuffer);
        public static glNamedFramebufferRenderbufferDelegate glNamedFramebufferRenderbuffer;

        public delegate void glNamedFramebufferTextureDelegate(uint framebuffer, uint attachment, uint texture, int level);
        public static glNamedFramebufferTextureDelegate glNamedFramebufferTexture;

        public delegate void glNamedFramebufferTextureLayerDelegate(uint framebuffer, uint attachment, uint texture, int level, int layer);
        public static glNamedFramebufferTextureLayerDelegate glNamedFramebufferTextureLayer;

        public delegate void glNamedRenderbufferStorageDelegate(uint renderbuffer, uint internalformat, int width, int height);
        public static glNamedRenderbufferStorageDelegate glNamedRenderbufferStorage;

        public delegate void glNamedRenderbufferStorageMultisampleDelegate(uint renderbuffer, int samples, uint internalformat, int width, int height);
        public static glNamedRenderbufferStorageMultisampleDelegate glNamedRenderbufferStorageMultisample;

        public delegate void glObjectLabelDelegate(uint identifier, uint name, int length, string label);
        public static glObjectLabelDelegate glObjectLabel;

        public delegate void glObjectPtrLabelDelegate(IntPtr ptr, int length, string label);
        public static glObjectPtrLabelDelegate glObjectPtrLabel;

        public delegate void glPatchParameterfvDelegate(uint pname, float[] values);
        public static glPatchParameterfvDelegate glPatchParameterfv;

        public delegate void glPatchParameteriDelegate(uint pname, int value);
        public static glPatchParameteriDelegate glPatchParameteri;

        public delegate void glPauseTransformFeedbackDelegate();
        public static glPauseTransformFeedbackDelegate glPauseTransformFeedback;

        public delegate void glPixelStorefDelegate(PixelStoreParameter pname, float param);
        public static glPixelStorefDelegate glPixelStoref;

        public delegate void glPixelStoreiDelegate(PixelStoreParameter pname, int param);
        public static glPixelStoreiDelegate glPixelStorei;

        public delegate void glPointParameterfDelegate(PointParameterName pname, float param);
        public static glPointParameterfDelegate glPointParameterf;

        public delegate void glPointParameterfvDelegate(PointParameterName pname, float[] _params);
        public static glPointParameterfvDelegate glPointParameterfv;

        public delegate void glPointParameteriDelegate(PointParameterName pname, int param);
        public static glPointParameteriDelegate glPointParameteri;

        public delegate void glPointParameterivDelegate(PointParameterName pname, int[] _params);
        public static glPointParameterivDelegate glPointParameteriv;

        public delegate void glPointSizeDelegate(float size);
        public static glPointSizeDelegate glPointSize;

        public delegate void glPolygonModeDelegate(Face face, PolygonMode mode);
        public static glPolygonModeDelegate glPolygonMode;

        public delegate void glPolygonOffsetDelegate(float factor, float units);
        public static glPolygonOffsetDelegate glPolygonOffset;

        public delegate void glPopDebugGroupDelegate();
        public static glPopDebugGroupDelegate glPopDebugGroup;

        public delegate void glPrimitiveRestartIndexDelegate(uint index);
        public static glPrimitiveRestartIndexDelegate glPrimitiveRestartIndex;

        public delegate void glProgramBinaryDelegate(uint program, uint binaryFormat, IntPtr binary, int length);
        public static glProgramBinaryDelegate glProgramBinary;

        public delegate void glProgramParameteriDelegate(uint program, ProgramParameterPName pname, int value);
        public static glProgramParameteriDelegate glProgramParameteri;

        public delegate void glProgramUniform1dDelegate(uint program, int location, double v0);
        public static glProgramUniform1dDelegate glProgramUniform1d;

        public delegate void glProgramUniform1dvDelegate(uint program, int location, int count, ref double value);
        public static glProgramUniform1dvDelegate glProgramUniform1dv;

        public delegate void glProgramUniform1fDelegate(uint program, int location, float v0);
        public static glProgramUniform1fDelegate glProgramUniform1f;

        public delegate void glProgramUniform1fvDelegate(uint program, int location, int count, ref float value);
        public static glProgramUniform1fvDelegate glProgramUniform1fv;

        public delegate void glProgramUniform1iDelegate(uint program, int location, int v0);
        public static glProgramUniform1iDelegate glProgramUniform1i;

        public delegate void glProgramUniform1ivDelegate(uint program, int location, int count, ref int value);
        public static glProgramUniform1ivDelegate glProgramUniform1iv;

        public delegate void glProgramUniform1uiDelegate(uint program, int location, uint v0);
        public static glProgramUniform1uiDelegate glProgramUniform1ui;

        public delegate void glProgramUniform1uivDelegate(uint program, int location, int count, ref uint value);
        public static glProgramUniform1uivDelegate glProgramUniform1uiv;

        public delegate void glProgramUniform2dDelegate(uint program, int location, double v0, double v1);
        public static glProgramUniform2dDelegate glProgramUniform2d;

        public delegate void glProgramUniform2dvDelegate(uint program, int location, int count, double[] value);
        public static glProgramUniform2dvDelegate glProgramUniform2dv;

        public delegate void glProgramUniform2fDelegate(uint program, int location, float v0, float v1);
        public static glProgramUniform2fDelegate glProgramUniform2f;

        public delegate void glProgramUniform2fvDelegate(uint program, int location, int count, float[] value);
        public static glProgramUniform2fvDelegate glProgramUniform2fv;

        public delegate void glProgramUniform2iDelegate(uint program, int location, int v0, int v1);
        public static glProgramUniform2iDelegate glProgramUniform2i;

        public delegate void glProgramUniform2ivDelegate(uint program, int location, int count, int[] value);
        public static glProgramUniform2ivDelegate glProgramUniform2iv;

        public delegate void glProgramUniform2uiDelegate(uint program, int location, uint v0, uint v1);
        public static glProgramUniform2uiDelegate glProgramUniform2ui;

        public delegate void glProgramUniform2uivDelegate(uint program, int location, int count, uint[] value);
        public static glProgramUniform2uivDelegate glProgramUniform2uiv;

        public delegate void glProgramUniform3dDelegate(uint program, int location, double v0, double v1, double v2);
        public static glProgramUniform3dDelegate glProgramUniform3d;

        public delegate void glProgramUniform3dvDelegate(uint program, int location, int count, double[] value);
        public static glProgramUniform3dvDelegate glProgramUniform3dv;

        public delegate void glProgramUniform3fDelegate(uint program, int location, float v0, float v1, float v2);
        public static glProgramUniform3fDelegate glProgramUniform3f;

        public delegate void glProgramUniform3fvDelegate(uint program, int location, int count, float[] value);
        public static glProgramUniform3fvDelegate glProgramUniform3fv;

        public delegate void glProgramUniform3iDelegate(uint program, int location, int v0, int v1, int v2);
        public static glProgramUniform3iDelegate glProgramUniform3i;

        public delegate void glProgramUniform3ivDelegate(uint program, int location, int count, int[] value);
        public static glProgramUniform3ivDelegate glProgramUniform3iv;

        public delegate void glProgramUniform3uiDelegate(uint program, int location, uint v0, uint v1, uint v2);
        public static glProgramUniform3uiDelegate glProgramUniform3ui;

        public delegate void glProgramUniform3uivDelegate(uint program, int location, int count, uint[] value);
        public static glProgramUniform3uivDelegate glProgramUniform3uiv;

        public delegate void glProgramUniform4dDelegate(uint program, int location, double v0, double v1, double v2, double v3);
        public static glProgramUniform4dDelegate glProgramUniform4d;

        public delegate void glProgramUniform4dvDelegate(uint program, int location, int count, double[] value);
        public static glProgramUniform4dvDelegate glProgramUniform4dv;

        public delegate void glProgramUniform4fDelegate(uint program, int location, float v0, float v1, float v2, float v3);
        public static glProgramUniform4fDelegate glProgramUniform4f;

        public delegate void glProgramUniform4fvDelegate(uint program, int location, int count, float[] value);
        public static glProgramUniform4fvDelegate glProgramUniform4fv;

        public delegate void glProgramUniform4iDelegate(uint program, int location, int v0, int v1, int v2, int v3);
        public static glProgramUniform4iDelegate glProgramUniform4i;

        public delegate void glProgramUniform4ivDelegate(uint program, int location, int count, int[] value);
        public static glProgramUniform4ivDelegate glProgramUniform4iv;

        public delegate void glProgramUniform4uiDelegate(uint program, int location, uint v0, uint v1, uint v2, uint v3);
        public static glProgramUniform4uiDelegate glProgramUniform4ui;

        public delegate void glProgramUniform4uivDelegate(uint program, int location, int count, uint[] value);
        public static glProgramUniform4uivDelegate glProgramUniform4uiv;

        public delegate void glProgramUniformMatrix2dvDelegate(uint program, int location, int count, bool transpose, double[] value);
        public static glProgramUniformMatrix2dvDelegate glProgramUniformMatrix2dv;

        public delegate void glProgramUniformMatrix2fvDelegate(uint program, int location, int count, bool transpose, float[] value);
        public static glProgramUniformMatrix2fvDelegate glProgramUniformMatrix2fv;

        public delegate void glProgramUniformMatrix2x3dvDelegate(uint program, int location, int count, bool transpose, double[] value);
        public static glProgramUniformMatrix2x3dvDelegate glProgramUniformMatrix2x3dv;

        public delegate void glProgramUniformMatrix2x3fvDelegate(uint program, int location, int count, bool transpose, float[] value);
        public static glProgramUniformMatrix2x3fvDelegate glProgramUniformMatrix2x3fv;

        public delegate void glProgramUniformMatrix2x4dvDelegate(uint program, int location, int count, bool transpose, double[] value);
        public static glProgramUniformMatrix2x4dvDelegate glProgramUniformMatrix2x4dv;

        public delegate void glProgramUniformMatrix2x4fvDelegate(uint program, int location, int count, bool transpose, float[] value);
        public static glProgramUniformMatrix2x4fvDelegate glProgramUniformMatrix2x4fv;

        public delegate void glProgramUniformMatrix3dvDelegate(uint program, int location, int count, bool transpose, double[] value);
        public static glProgramUniformMatrix3dvDelegate glProgramUniformMatrix3dv;

        public delegate void glProgramUniformMatrix3fvDelegate(uint program, int location, int count, bool transpose, float[] value);
        public static glProgramUniformMatrix3fvDelegate glProgramUniformMatrix3fv;

        public delegate void glProgramUniformMatrix3x2dvDelegate(uint program, int location, int count, bool transpose, double[] value);
        public static glProgramUniformMatrix3x2dvDelegate glProgramUniformMatrix3x2dv;

        public delegate void glProgramUniformMatrix3x2fvDelegate(uint program, int location, int count, bool transpose, float[] value);
        public static glProgramUniformMatrix3x2fvDelegate glProgramUniformMatrix3x2fv;

        public delegate void glProgramUniformMatrix3x4dvDelegate(uint program, int location, int count, bool transpose, double[] value);
        public static glProgramUniformMatrix3x4dvDelegate glProgramUniformMatrix3x4dv;

        public delegate void glProgramUniformMatrix3x4fvDelegate(uint program, int location, int count, bool transpose, float[] value);
        public static glProgramUniformMatrix3x4fvDelegate glProgramUniformMatrix3x4fv;

        public delegate void glProgramUniformMatrix4dvDelegate(uint program, int location, int count, bool transpose, double[] value);
        public static glProgramUniformMatrix4dvDelegate glProgramUniformMatrix4dv;

        public delegate void glProgramUniformMatrix4fvDelegate(uint program, int location, int count, bool transpose, float[] value);
        public static glProgramUniformMatrix4fvDelegate glProgramUniformMatrix4fv;

        public delegate void glProgramUniformMatrix4x2dvDelegate(uint program, int location, int count, bool transpose, double[] value);
        public static glProgramUniformMatrix4x2dvDelegate glProgramUniformMatrix4x2dv;

        public delegate void glProgramUniformMatrix4x2fvDelegate(uint program, int location, int count, bool transpose, float[] value);
        public static glProgramUniformMatrix4x2fvDelegate glProgramUniformMatrix4x2fv;

        public delegate void glProgramUniformMatrix4x3dvDelegate(uint program, int location, int count, bool transpose, double[] value);
        public static glProgramUniformMatrix4x3dvDelegate glProgramUniformMatrix4x3dv;

        public delegate void glProgramUniformMatrix4x3fvDelegate(uint program, int location, int count, bool transpose, float[] value);
        public static glProgramUniformMatrix4x3fvDelegate glProgramUniformMatrix4x3fv;

        public delegate void glProvokingVertexDelegate(uint mode);
        public static glProvokingVertexDelegate glProvokingVertex;

        public delegate void glPushDebugGroupDelegate(uint source, uint id, int length, string message);
        public static glPushDebugGroupDelegate glPushDebugGroup;

        public delegate void glQueryCounterDelegate(uint id, uint target);
        public static glQueryCounterDelegate glQueryCounter;

        public delegate void glReadBufferDelegate(ReadBufferMode src);
        public static glReadBufferDelegate glReadBuffer;

        public delegate void glReadPixelsDelegate(int x, int y, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
        public static glReadPixelsDelegate glReadPixels;

        public delegate void glReadnPixelsDelegate(int x, int y, int width, int height, uint format, uint type, int bufSize, IntPtr data);
        public static glReadnPixelsDelegate glReadnPixels;

        public delegate void glReleaseShaderCompilerDelegate();
        public static glReleaseShaderCompilerDelegate glReleaseShaderCompiler;

        public delegate void glRenderbufferStorageDelegate(RenderbufferTarget target, uint internalformat, int width, int height);
        public static glRenderbufferStorageDelegate glRenderbufferStorage;

        public delegate void glRenderbufferStorageMultisampleDelegate(uint target, int samples, uint internalformat, int width, int height);
        public static glRenderbufferStorageMultisampleDelegate glRenderbufferStorageMultisample;

        public delegate void glResumeTransformFeedbackDelegate();
        public static glResumeTransformFeedbackDelegate glResumeTransformFeedback;

        public delegate void glSampleCoverageDelegate(float value, bool invert);
        public static glSampleCoverageDelegate glSampleCoverage;

        public delegate void glSampleMaskiDelegate(uint maskNumber, uint mask);
        public static glSampleMaskiDelegate glSampleMaski;

        public delegate void glSamplerParameterIivDelegate(uint sampler, uint pname, int[] param);
        public static glSamplerParameterIivDelegate glSamplerParameterIiv;

        public delegate void glSamplerParameterIuivDelegate(uint sampler, uint pname, uint[] param);
        public static glSamplerParameterIuivDelegate glSamplerParameterIuiv;

        public delegate void glSamplerParameterfDelegate(uint sampler, uint pname, float param);
        public static glSamplerParameterfDelegate glSamplerParameterf;

        public delegate void glSamplerParameterfvDelegate(uint sampler, uint pname, float[] param);
        public static glSamplerParameterfvDelegate glSamplerParameterfv;

        public delegate void glSamplerParameteriDelegate(uint sampler, uint pname, int param);
        public static glSamplerParameteriDelegate glSamplerParameteri;

        public delegate void glSamplerParameterivDelegate(uint sampler, uint pname, int[] param);
        public static glSamplerParameterivDelegate glSamplerParameteriv;

        public delegate void glScissorDelegate(int x, int y, int width, int height);
        public static glScissorDelegate glScissor;

        public delegate void glScissorArrayvDelegate(uint first, int count, int[] v);
        public static glScissorArrayvDelegate glScissorArrayv;

        public delegate void glScissorIndexedDelegate(uint index, int left, int bottom, int width, int height);
        public static glScissorIndexedDelegate glScissorIndexed;

        public delegate void glScissorIndexedvDelegate(uint index, int[] v);
        public static glScissorIndexedvDelegate glScissorIndexedv;

        public delegate void glShaderBinaryDelegate(int count, uint[] shaders, uint binaryformat, IntPtr binary, int length);
        public static glShaderBinaryDelegate glShaderBinary;

        public delegate void glShaderSourceDelegate(uint shader, int count, string[] _string, int[] length);
        public static glShaderSourceDelegate glShaderSource;

        public delegate void glShaderStorageBlockBindingDelegate(uint program, uint storageBlockIndex, uint storageBlockBinding);
        public static glShaderStorageBlockBindingDelegate glShaderStorageBlockBinding;

        public delegate void glStencilFuncDelegate(StencilFunction func, int _ref, uint mask);
        public static glStencilFuncDelegate glStencilFunc;

        public delegate void glStencilFuncSeparateDelegate(Face face, StencilFunction func, int _ref, uint mask);
        public static glStencilFuncSeparateDelegate glStencilFuncSeparate;

        public delegate void glStencilMaskDelegate(uint mask);
        public static glStencilMaskDelegate glStencilMask;

        public delegate void glStencilMaskSeparateDelegate(Face face, uint mask);
        public static glStencilMaskSeparateDelegate glStencilMaskSeparate;

        public delegate void glStencilOpDelegate(StencilOp fail, StencilOp zfail, StencilOp zpass);
        public static glStencilOpDelegate glStencilOp;

        public delegate void glStencilOpSeparateDelegate(Face face, StencilOp sfail, StencilOp dpfail, StencilOp dppass);
        public static glStencilOpSeparateDelegate glStencilOpSeparate;

        public delegate void glTexBufferDelegate(TextureTarget target, uint internalformat, uint buffer);
        public static glTexBufferDelegate glTexBuffer;

        public delegate void glTexBufferRangeDelegate(uint target, uint internalformat, uint buffer, int offset, int size);
        public static glTexBufferRangeDelegate glTexBufferRange;

        public delegate void glTexImage1DDelegate(TextureTarget target, int level, int internalformat, int width, int border, PixelFormat format, PixelType type, IntPtr pixels);
        public static glTexImage1DDelegate glTexImage1D;

        public delegate void glTexImage2DDelegate(TextureTarget target, int level, int internalformat, int width, int height, int border, PixelFormat format, PixelType type, IntPtr pixels);
        public static glTexImage2DDelegate glTexImage2D;

        public delegate void glTexImage2DMultisampleDelegate(uint target, int samples, uint internalformat, int width, int height, bool fixedsamplelocations);
        public static glTexImage2DMultisampleDelegate glTexImage2DMultisample;

        public delegate void glTexImage3DDelegate(TextureTarget target, int level, int internalformat, int width, int height, int depth, int border, PixelFormat format, PixelType type, IntPtr pixels);
        public static glTexImage3DDelegate glTexImage3D;

        public delegate void glTexImage3DMultisampleDelegate(uint target, int samples, uint internalformat, int width, int height, int depth, bool fixedsamplelocations);
        public static glTexImage3DMultisampleDelegate glTexImage3DMultisample;

        public delegate void glTexParameterIivDelegate(TextureTarget target, TextureParameterName pname, int[] _params);
        public static glTexParameterIivDelegate glTexParameterIiv;

        public delegate void glTexParameterIuivDelegate(TextureTarget target, TextureParameterName pname, uint[] _params);
        public static glTexParameterIuivDelegate glTexParameterIuiv;

        public delegate void glTexParameterfDelegate(TextureTarget target, TextureParameterName pname, float param);
        public static glTexParameterfDelegate glTexParameterf;

        public delegate void glTexParameterfvDelegate(TextureTarget target, TextureParameterName pname, float[] _params);
        public static glTexParameterfvDelegate glTexParameterfv;

        public delegate void glTexParameteriDelegate(TextureTarget target, TextureParameterName pname, int param);
        public static glTexParameteriDelegate glTexParameteri;

        public delegate void glTexParameterivDelegate(TextureTarget target, TextureParameterName pname, int[] _params);
        public static glTexParameterivDelegate glTexParameteriv;

        public delegate void glTexStorage1DDelegate(uint target, int levels, uint internalformat, int width);
        public static glTexStorage1DDelegate glTexStorage1D;

        public delegate void glTexStorage2DDelegate(uint target, int levels, uint internalformat, int width, int height);
        public static glTexStorage2DDelegate glTexStorage2D;

        public delegate void glTexStorage2DMultisampleDelegate(uint target, int samples, uint internalformat, int width, int height, bool fixedsamplelocations);
        public static glTexStorage2DMultisampleDelegate glTexStorage2DMultisample;

        public delegate void glTexStorage3DDelegate(uint target, int levels, uint internalformat, int width, int height, int depth);
        public static glTexStorage3DDelegate glTexStorage3D;

        public delegate void glTexStorage3DMultisampleDelegate(uint target, int samples, uint internalformat, int width, int height, int depth, bool fixedsamplelocations);
        public static glTexStorage3DMultisampleDelegate glTexStorage3DMultisample;

        public delegate void glTexSubImage1DDelegate(TextureTarget target, int level, int xoffset, int width, PixelFormat format, PixelType type, IntPtr pixels);
        public static glTexSubImage1DDelegate glTexSubImage1D;

        public delegate void glTexSubImage2DDelegate(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
        public static glTexSubImage2DDelegate glTexSubImage2D;

        public delegate void glTexSubImage3DDelegate(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
        public static glTexSubImage3DDelegate glTexSubImage3D;

        public delegate void glTextureBarrierDelegate();
        public static glTextureBarrierDelegate glTextureBarrier;

        public delegate void glTextureBufferDelegate(uint texture, uint internalformat, uint buffer);
        public static glTextureBufferDelegate glTextureBuffer;

        public delegate void glTextureBufferRangeDelegate(uint texture, uint internalformat, uint buffer, int offset, int size);
        public static glTextureBufferRangeDelegate glTextureBufferRange;

        public delegate void glTextureParameterIivDelegate(uint texture, uint pname, ref int _params);
        public static glTextureParameterIivDelegate glTextureParameterIiv;

        public delegate void glTextureParameterIuivDelegate(uint texture, uint pname, ref uint _params);
        public static glTextureParameterIuivDelegate glTextureParameterIuiv;

        public delegate void glTextureParameterfDelegate(uint texture, uint pname, float param);
        public static glTextureParameterfDelegate glTextureParameterf;

        public delegate void glTextureParameterfvDelegate(uint texture, uint pname, ref float param);
        public static glTextureParameterfvDelegate glTextureParameterfv;

        public delegate void glTextureParameteriDelegate(uint texture, uint pname, int param);
        public static glTextureParameteriDelegate glTextureParameteri;

        public delegate void glTextureParameterivDelegate(uint texture, uint pname, ref int param);
        public static glTextureParameterivDelegate glTextureParameteriv;

        public delegate void glTextureStorage1DDelegate(uint texture, int levels, uint internalformat, int width);
        public static glTextureStorage1DDelegate glTextureStorage1D;

        public delegate void glTextureStorage2DDelegate(uint texture, int levels, uint internalformat, int width, int height);
        public static glTextureStorage2DDelegate glTextureStorage2D;

        public delegate void glTextureStorage2DMultisampleDelegate(uint texture, int samples, uint internalformat, int width, int height, bool fixedsamplelocations);
        public static glTextureStorage2DMultisampleDelegate glTextureStorage2DMultisample;

        public delegate void glTextureStorage3DDelegate(uint texture, int levels, uint internalformat, int width, int height, int depth);
        public static glTextureStorage3DDelegate glTextureStorage3D;

        public delegate void glTextureStorage3DMultisampleDelegate(uint texture, int samples, uint internalformat, int width, int height, int depth, bool fixedsamplelocations);
        public static glTextureStorage3DMultisampleDelegate glTextureStorage3DMultisample;

        public delegate void glTextureSubImage1DDelegate(uint texture, int level, int xoffset, int width, uint format, uint type, IntPtr pixels);
        public static glTextureSubImage1DDelegate glTextureSubImage1D;

        public delegate void glTextureSubImage2DDelegate(uint texture, int level, int xoffset, int yoffset, int width, int height, uint format, uint type, IntPtr pixels);
        public static glTextureSubImage2DDelegate glTextureSubImage2D;

        public delegate void glTextureSubImage3DDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, IntPtr pixels);
        public static glTextureSubImage3DDelegate glTextureSubImage3D;

        public delegate void glTextureViewDelegate(uint texture, uint target, uint origtexture, uint internalformat, uint minlevel, uint numlevels, uint minlayer, uint numlayers);
        public static glTextureViewDelegate glTextureView;

        public delegate void glTransformFeedbackBufferBaseDelegate(uint xfb, uint index, uint buffer);
        public static glTransformFeedbackBufferBaseDelegate glTransformFeedbackBufferBase;

        public delegate void glTransformFeedbackBufferRangeDelegate(uint xfb, uint index, uint buffer, int offset, int size);
        public static glTransformFeedbackBufferRangeDelegate glTransformFeedbackBufferRange;

        public delegate void glTransformFeedbackVaryingsDelegate(uint program, int count, string[] varyings, uint bufferMode);
        public static glTransformFeedbackVaryingsDelegate glTransformFeedbackVaryings;

        public delegate void glUniform1dDelegate(int location, double x);
        public static glUniform1dDelegate glUniform1d;

        public delegate void glUniform1dvDelegate(int location, int count, double[] value);
        public static glUniform1dvDelegate glUniform1dv;

        public delegate void glUniform1fDelegate(int location, float v0);
        public static glUniform1fDelegate glUniform1f;

        public delegate void glUniform1fvDelegate(int location, int count, float[] value);
        public static glUniform1fvDelegate glUniform1fv;

        public delegate void glUniform1iDelegate(int location, int v0);
        public static glUniform1iDelegate glUniform1i;

        public delegate void glUniform1ivDelegate(int location, int count, int[] value);
        public static glUniform1ivDelegate glUniform1iv;

        public delegate void glUniform1uiDelegate(int location, uint v0);
        public static glUniform1uiDelegate glUniform1ui;

        public delegate void glUniform1uivDelegate(int location, int count, uint[] value);
        public static glUniform1uivDelegate glUniform1uiv;

        public delegate void glUniform2dDelegate(int location, double x, double y);
        public static glUniform2dDelegate glUniform2d;

        public delegate void glUniform2dvDelegate(int location, int count, double[] value);
        public static glUniform2dvDelegate glUniform2dv;

        public delegate void glUniform2fDelegate(int location, float v0, float v1);
        public static glUniform2fDelegate glUniform2f;

        public delegate void glUniform2fvDelegate(int location, int count, float[] value);
        public static glUniform2fvDelegate glUniform2fv;

        public delegate void glUniform2iDelegate(int location, int v0, int v1);
        public static glUniform2iDelegate glUniform2i;

        public delegate void glUniform2ivDelegate(int location, int count, int[] value);
        public static glUniform2ivDelegate glUniform2iv;

        public delegate void glUniform2uiDelegate(int location, uint v0, uint v1);
        public static glUniform2uiDelegate glUniform2ui;

        public delegate void glUniform2uivDelegate(int location, int count, uint[] value);
        public static glUniform2uivDelegate glUniform2uiv;

        public delegate void glUniform3dDelegate(int location, double x, double y, double z);
        public static glUniform3dDelegate glUniform3d;

        public delegate void glUniform3dvDelegate(int location, int count, double[] value);
        public static glUniform3dvDelegate glUniform3dv;

        public delegate void glUniform3fDelegate(int location, float v0, float v1, float v2);
        public static glUniform3fDelegate glUniform3f;

        public delegate void glUniform3fvDelegate(int location, int count, float[] value);
        public static glUniform3fvDelegate glUniform3fv;

        public delegate void glUniform3iDelegate(int location, int v0, int v1, int v2);
        public static glUniform3iDelegate glUniform3i;

        public delegate void glUniform3ivDelegate(int location, int count, int[] value);
        public static glUniform3ivDelegate glUniform3iv;

        public delegate void glUniform3uiDelegate(int location, uint v0, uint v1, uint v2);
        public static glUniform3uiDelegate glUniform3ui;

        public delegate void glUniform3uivDelegate(int location, int count, uint[] value);
        public static glUniform3uivDelegate glUniform3uiv;

        public delegate void glUniform4dDelegate(int location, double x, double y, double z, double w);
        public static glUniform4dDelegate glUniform4d;

        public delegate void glUniform4dvDelegate(int location, int count, double[] value);
        public static glUniform4dvDelegate glUniform4dv;

        public delegate void glUniform4fDelegate(int location, float v0, float v1, float v2, float v3);
        public static glUniform4fDelegate glUniform4f;

        public delegate void glUniform4fvDelegate(int location, int count, float[] value);
        public static glUniform4fvDelegate glUniform4fv;

        public delegate void glUniform4iDelegate(int location, int v0, int v1, int v2, int v3);
        public static glUniform4iDelegate glUniform4i;

        public delegate void glUniform4ivDelegate(int location, int count, int[] value);
        public static glUniform4ivDelegate glUniform4iv;

        public delegate void glUniform4uiDelegate(int location, uint v0, uint v1, uint v2, uint v3);
        public static glUniform4uiDelegate glUniform4ui;

        public delegate void glUniform4uivDelegate(int location, int count, uint[] value);
        public static glUniform4uivDelegate glUniform4uiv;

        public delegate void glUniformBlockBindingDelegate(uint program, uint uniformBlockIndex, uint uniformBlockBinding);
        public static glUniformBlockBindingDelegate glUniformBlockBinding;

        public delegate void glUniformMatrix2dvDelegate(int location, int count, bool transpose, double[] value);
        public static glUniformMatrix2dvDelegate glUniformMatrix2dv;

        public delegate void glUniformMatrix2fvDelegate(int location, int count, bool transpose, float[] value);
        public static glUniformMatrix2fvDelegate glUniformMatrix2fv;

        public delegate void glUniformMatrix2x3dvDelegate(int location, int count, bool transpose, double[] value);
        public static glUniformMatrix2x3dvDelegate glUniformMatrix2x3dv;

        public delegate void glUniformMatrix2x3fvDelegate(int location, int count, bool transpose, float[] value);
        public static glUniformMatrix2x3fvDelegate glUniformMatrix2x3fv;

        public delegate void glUniformMatrix2x4dvDelegate(int location, int count, bool transpose, double[] value);
        public static glUniformMatrix2x4dvDelegate glUniformMatrix2x4dv;

        public delegate void glUniformMatrix2x4fvDelegate(int location, int count, bool transpose, float[] value);
        public static glUniformMatrix2x4fvDelegate glUniformMatrix2x4fv;

        public delegate void glUniformMatrix3dvDelegate(int location, int count, bool transpose, double[] value);
        public static glUniformMatrix3dvDelegate glUniformMatrix3dv;

        public delegate void glUniformMatrix3fvDelegate(int location, int count, bool transpose, float[] value);
        public static glUniformMatrix3fvDelegate glUniformMatrix3fv;

        public delegate void glUniformMatrix3x2dvDelegate(int location, int count, bool transpose, double[] value);
        public static glUniformMatrix3x2dvDelegate glUniformMatrix3x2dv;

        public delegate void glUniformMatrix3x2fvDelegate(int location, int count, bool transpose, float[] value);
        public static glUniformMatrix3x2fvDelegate glUniformMatrix3x2fv;

        public delegate void glUniformMatrix3x4dvDelegate(int location, int count, bool transpose, double[] value);
        public static glUniformMatrix3x4dvDelegate glUniformMatrix3x4dv;

        public delegate void glUniformMatrix3x4fvDelegate(int location, int count, bool transpose, float[] value);
        public static glUniformMatrix3x4fvDelegate glUniformMatrix3x4fv;

        public delegate void glUniformMatrix4dvDelegate(int location, int count, bool transpose, double[] value);
        public static glUniformMatrix4dvDelegate glUniformMatrix4dv;

        public delegate void glUniformMatrix4fvDelegate(int location, int count, bool transpose, float[] value);
        public static glUniformMatrix4fvDelegate glUniformMatrix4fv;

        public delegate void glUniformMatrix4x2dvDelegate(int location, int count, bool transpose, double[] value);
        public static glUniformMatrix4x2dvDelegate glUniformMatrix4x2dv;

        public delegate void glUniformMatrix4x2fvDelegate(int location, int count, bool transpose, float[] value);
        public static glUniformMatrix4x2fvDelegate glUniformMatrix4x2fv;

        public delegate void glUniformMatrix4x3dvDelegate(int location, int count, bool transpose, double[] value);
        public static glUniformMatrix4x3dvDelegate glUniformMatrix4x3dv;

        public delegate void glUniformMatrix4x3fvDelegate(int location, int count, bool transpose, float[] value);
        public static glUniformMatrix4x3fvDelegate glUniformMatrix4x3fv;

        public delegate void glUniformSubroutinesuivDelegate(uint shadertype, int count, uint[] indices);
        public static glUniformSubroutinesuivDelegate glUniformSubroutinesuiv;

        public delegate bool glUnmapBufferDelegate(BufferTarget target);
        public static glUnmapBufferDelegate glUnmapBuffer;

        public delegate bool glUnmapNamedBufferDelegate(uint buffer);
        public static glUnmapNamedBufferDelegate glUnmapNamedBuffer;

        public delegate void glUseProgramDelegate(uint program);
        public static glUseProgramDelegate glUseProgram;

        public delegate void glUseProgramStagesDelegate(uint pipeline, uint stages, uint program);
        public static glUseProgramStagesDelegate glUseProgramStages;

        public delegate void glValidateProgramDelegate(uint program);
        public static glValidateProgramDelegate glValidateProgram;

        public delegate void glValidateProgramPipelineDelegate(uint pipeline);
        public static glValidateProgramPipelineDelegate glValidateProgramPipeline;

        public delegate void glVertexArrayAttribBindingDelegate(uint vaobj, uint attribindex, uint bindingindex);
        public static glVertexArrayAttribBindingDelegate glVertexArrayAttribBinding;

        public delegate void glVertexArrayAttribFormatDelegate(uint vaobj, uint attribindex, int size, VertexAttribPointerType type, bool normalized, uint relativeoffset);
        public static glVertexArrayAttribFormatDelegate glVertexArrayAttribFormat;

        public delegate void glVertexArrayAttribIFormatDelegate(uint vaobj, uint attribindex, int size, VertexAttribPointerType type, uint relativeoffset);
        public static glVertexArrayAttribIFormatDelegate glVertexArrayAttribIFormat;

        public delegate void glVertexArrayAttribLFormatDelegate(uint vaobj, uint attribindex, int size, VertexAttribPointerType type, uint relativeoffset);
        public static glVertexArrayAttribLFormatDelegate glVertexArrayAttribLFormat;

        public delegate void glVertexArrayBindingDivisorDelegate(uint vaobj, uint bindingindex, uint divisor);
        public static glVertexArrayBindingDivisorDelegate glVertexArrayBindingDivisor;

        public delegate void glVertexArrayElementBufferDelegate(uint vaobj, uint buffer);
        public static glVertexArrayElementBufferDelegate glVertexArrayElementBuffer;

        public delegate void glVertexArrayVertexBufferDelegate(uint vaobj, uint bindingindex, uint buffer, int offset, int stride);
        public static glVertexArrayVertexBufferDelegate glVertexArrayVertexBuffer;

        public delegate void glVertexArrayVertexBuffersDelegate(uint vaobj, uint first, int count, ref uint buffers, ref int offsets, ref int strides);
        public static glVertexArrayVertexBuffersDelegate glVertexArrayVertexBuffers;

        public delegate void glVertexAttrib1dDelegate(uint index, double x);
        public static glVertexAttrib1dDelegate glVertexAttrib1d;

        public delegate void glVertexAttrib1dvDelegate(uint index, ref double v);
        public static glVertexAttrib1dvDelegate glVertexAttrib1dv;

        public delegate void glVertexAttrib1fDelegate(uint index, float x);
        public static glVertexAttrib1fDelegate glVertexAttrib1f;

        public delegate void glVertexAttrib1fvDelegate(uint index, ref float v);
        public static glVertexAttrib1fvDelegate glVertexAttrib1fv;

        public delegate void glVertexAttrib1sDelegate(uint index, short x);
        public static glVertexAttrib1sDelegate glVertexAttrib1s;

        public delegate void glVertexAttrib1svDelegate(uint index, ref short v);
        public static glVertexAttrib1svDelegate glVertexAttrib1sv;

        public delegate void glVertexAttrib2dDelegate(uint index, double x, double y);
        public static glVertexAttrib2dDelegate glVertexAttrib2d;

        public delegate void glVertexAttrib2dvDelegate(uint index, double[] v);
        public static glVertexAttrib2dvDelegate glVertexAttrib2dv;

        public delegate void glVertexAttrib2fDelegate(uint index, float x, float y);
        public static glVertexAttrib2fDelegate glVertexAttrib2f;

        public delegate void glVertexAttrib2fvDelegate(uint index, float[] v);
        public static glVertexAttrib2fvDelegate glVertexAttrib2fv;

        public delegate void glVertexAttrib2sDelegate(uint index, short x, short y);
        public static glVertexAttrib2sDelegate glVertexAttrib2s;

        public delegate void glVertexAttrib2svDelegate(uint index, short[] v);
        public static glVertexAttrib2svDelegate glVertexAttrib2sv;

        public delegate void glVertexAttrib3dDelegate(uint index, double x, double y, double z);
        public static glVertexAttrib3dDelegate glVertexAttrib3d;

        public delegate void glVertexAttrib3dvDelegate(uint index, double[] v);
        public static glVertexAttrib3dvDelegate glVertexAttrib3dv;

        public delegate void glVertexAttrib3fDelegate(uint index, float x, float y, float z);
        public static glVertexAttrib3fDelegate glVertexAttrib3f;

        public delegate void glVertexAttrib3fvDelegate(uint index, float[] v);
        public static glVertexAttrib3fvDelegate glVertexAttrib3fv;

        public delegate void glVertexAttrib3sDelegate(uint index, short x, short y, short z);
        public static glVertexAttrib3sDelegate glVertexAttrib3s;

        public delegate void glVertexAttrib3svDelegate(uint index, short[] v);
        public static glVertexAttrib3svDelegate glVertexAttrib3sv;

        public delegate void glVertexAttrib4NbvDelegate(uint index, sbyte[] v);
        public static glVertexAttrib4NbvDelegate glVertexAttrib4Nbv;

        public delegate void glVertexAttrib4NivDelegate(uint index, int[] v);
        public static glVertexAttrib4NivDelegate glVertexAttrib4Niv;

        public delegate void glVertexAttrib4NsvDelegate(uint index, short[] v);
        public static glVertexAttrib4NsvDelegate glVertexAttrib4Nsv;

        public delegate void glVertexAttrib4NubDelegate(uint index, byte x, byte y, byte z, byte w);
        public static glVertexAttrib4NubDelegate glVertexAttrib4Nub;

        public delegate void glVertexAttrib4NubvDelegate(uint index, byte[] v);
        public static glVertexAttrib4NubvDelegate glVertexAttrib4Nubv;

        public delegate void glVertexAttrib4NuivDelegate(uint index, uint[] v);
        public static glVertexAttrib4NuivDelegate glVertexAttrib4Nuiv;

        public delegate void glVertexAttrib4NusvDelegate(uint index, ushort[] v);
        public static glVertexAttrib4NusvDelegate glVertexAttrib4Nusv;

        public delegate void glVertexAttrib4bvDelegate(uint index, sbyte[] v);
        public static glVertexAttrib4bvDelegate glVertexAttrib4bv;

        public delegate void glVertexAttrib4dDelegate(uint index, double x, double y, double z, double w);
        public static glVertexAttrib4dDelegate glVertexAttrib4d;

        public delegate void glVertexAttrib4dvDelegate(uint index, double[] v);
        public static glVertexAttrib4dvDelegate glVertexAttrib4dv;

        public delegate void glVertexAttrib4fDelegate(uint index, float x, float y, float z, float w);
        public static glVertexAttrib4fDelegate glVertexAttrib4f;

        public delegate void glVertexAttrib4fvDelegate(uint index, float[] v);
        public static glVertexAttrib4fvDelegate glVertexAttrib4fv;

        public delegate void glVertexAttrib4ivDelegate(uint index, int[] v);
        public static glVertexAttrib4ivDelegate glVertexAttrib4iv;

        public delegate void glVertexAttrib4sDelegate(uint index, short x, short y, short z, short w);
        public static glVertexAttrib4sDelegate glVertexAttrib4s;

        public delegate void glVertexAttrib4svDelegate(uint index, short[] v);
        public static glVertexAttrib4svDelegate glVertexAttrib4sv;

        public delegate void glVertexAttrib4ubvDelegate(uint index, byte[] v);
        public static glVertexAttrib4ubvDelegate glVertexAttrib4ubv;

        public delegate void glVertexAttrib4uivDelegate(uint index, uint[] v);
        public static glVertexAttrib4uivDelegate glVertexAttrib4uiv;

        public delegate void glVertexAttrib4usvDelegate(uint index, ushort[] v);
        public static glVertexAttrib4usvDelegate glVertexAttrib4usv;

        public delegate void glVertexAttribBindingDelegate(uint attribindex, uint bindingindex);
        public static glVertexAttribBindingDelegate glVertexAttribBinding;

        public delegate void glVertexAttribDivisorDelegate(uint index, uint divisor);
        public static glVertexAttribDivisorDelegate glVertexAttribDivisor;

        public delegate void glVertexAttribFormatDelegate(uint attribindex, int size, VertexAttribPointerType type, bool normalized, uint relativeoffset);
        public static glVertexAttribFormatDelegate glVertexAttribFormat;

        public delegate void glVertexAttribI1iDelegate(uint index, int x);
        public static glVertexAttribI1iDelegate glVertexAttribI1i;

        public delegate void glVertexAttribI1ivDelegate(uint index, ref int v);
        public static glVertexAttribI1ivDelegate glVertexAttribI1iv;

        public delegate void glVertexAttribI1uiDelegate(uint index, uint x);
        public static glVertexAttribI1uiDelegate glVertexAttribI1ui;

        public delegate void glVertexAttribI1uivDelegate(uint index, ref uint v);
        public static glVertexAttribI1uivDelegate glVertexAttribI1uiv;

        public delegate void glVertexAttribI2iDelegate(uint index, int x, int y);
        public static glVertexAttribI2iDelegate glVertexAttribI2i;

        public delegate void glVertexAttribI2ivDelegate(uint index, int[] v);
        public static glVertexAttribI2ivDelegate glVertexAttribI2iv;

        public delegate void glVertexAttribI2uiDelegate(uint index, uint x, uint y);
        public static glVertexAttribI2uiDelegate glVertexAttribI2ui;

        public delegate void glVertexAttribI2uivDelegate(uint index, uint[] v);
        public static glVertexAttribI2uivDelegate glVertexAttribI2uiv;

        public delegate void glVertexAttribI3iDelegate(uint index, int x, int y, int z);
        public static glVertexAttribI3iDelegate glVertexAttribI3i;

        public delegate void glVertexAttribI3ivDelegate(uint index, int[] v);
        public static glVertexAttribI3ivDelegate glVertexAttribI3iv;

        public delegate void glVertexAttribI3uiDelegate(uint index, uint x, uint y, uint z);
        public static glVertexAttribI3uiDelegate glVertexAttribI3ui;

        public delegate void glVertexAttribI3uivDelegate(uint index, uint[] v);
        public static glVertexAttribI3uivDelegate glVertexAttribI3uiv;

        public delegate void glVertexAttribI4bvDelegate(uint index, sbyte[] v);
        public static glVertexAttribI4bvDelegate glVertexAttribI4bv;

        public delegate void glVertexAttribI4iDelegate(uint index, int x, int y, int z, int w);
        public static glVertexAttribI4iDelegate glVertexAttribI4i;

        public delegate void glVertexAttribI4ivDelegate(uint index, int[] v);
        public static glVertexAttribI4ivDelegate glVertexAttribI4iv;

        public delegate void glVertexAttribI4svDelegate(uint index, short[] v);
        public static glVertexAttribI4svDelegate glVertexAttribI4sv;

        public delegate void glVertexAttribI4ubvDelegate(uint index, byte[] v);
        public static glVertexAttribI4ubvDelegate glVertexAttribI4ubv;

        public delegate void glVertexAttribI4uiDelegate(uint index, uint x, uint y, uint z, uint w);
        public static glVertexAttribI4uiDelegate glVertexAttribI4ui;

        public delegate void glVertexAttribI4uivDelegate(uint index, uint[] v);
        public static glVertexAttribI4uivDelegate glVertexAttribI4uiv;

        public delegate void glVertexAttribI4usvDelegate(uint index, ushort[] v);
        public static glVertexAttribI4usvDelegate glVertexAttribI4usv;

        public delegate void glVertexAttribIFormatDelegate(uint attribindex, int size, VertexAttribPointerType type, uint relativeoffset);
        public static glVertexAttribIFormatDelegate glVertexAttribIFormat;

        public delegate void glVertexAttribIPointerDelegate(uint index, int size, VertexAttribEnum type, int stride, IntPtr pointer);
        public static glVertexAttribIPointerDelegate glVertexAttribIPointer;

        public delegate void glVertexAttribL1dDelegate(uint index, double x);
        public static glVertexAttribL1dDelegate glVertexAttribL1d;

        public delegate void glVertexAttribL1dvDelegate(uint index, ref double v);
        public static glVertexAttribL1dvDelegate glVertexAttribL1dv;

        public delegate void glVertexAttribL2dDelegate(uint index, double x, double y);
        public static glVertexAttribL2dDelegate glVertexAttribL2d;

        public delegate void glVertexAttribL2dvDelegate(uint index, double[] v);
        public static glVertexAttribL2dvDelegate glVertexAttribL2dv;

        public delegate void glVertexAttribL3dDelegate(uint index, double x, double y, double z);
        public static glVertexAttribL3dDelegate glVertexAttribL3d;

        public delegate void glVertexAttribL3dvDelegate(uint index, double[] v);
        public static glVertexAttribL3dvDelegate glVertexAttribL3dv;

        public delegate void glVertexAttribL4dDelegate(uint index, double x, double y, double z, double w);
        public static glVertexAttribL4dDelegate glVertexAttribL4d;

        public delegate void glVertexAttribL4dvDelegate(uint index, double[] v);
        public static glVertexAttribL4dvDelegate glVertexAttribL4dv;

        public delegate void glVertexAttribLFormatDelegate(uint attribindex, int size, VertexAttribPointerType type, uint relativeoffset);
        public static glVertexAttribLFormatDelegate glVertexAttribLFormat;

        public delegate void glVertexAttribLPointerDelegate(uint index, int size, uint type, int stride, IntPtr pointer);
        public static glVertexAttribLPointerDelegate glVertexAttribLPointer;

        public delegate void glVertexAttribP1uiDelegate(uint index, uint type, bool normalized, uint value);
        public static glVertexAttribP1uiDelegate glVertexAttribP1ui;

        public delegate void glVertexAttribP1uivDelegate(uint index, uint type, bool normalized, ref uint value);
        public static glVertexAttribP1uivDelegate glVertexAttribP1uiv;

        public delegate void glVertexAttribP2uiDelegate(uint index, uint type, bool normalized, uint value);
        public static glVertexAttribP2uiDelegate glVertexAttribP2ui;

        public delegate void glVertexAttribP2uivDelegate(uint index, uint type, bool normalized, ref uint value);
        public static glVertexAttribP2uivDelegate glVertexAttribP2uiv;

        public delegate void glVertexAttribP3uiDelegate(uint index, uint type, bool normalized, uint value);
        public static glVertexAttribP3uiDelegate glVertexAttribP3ui;

        public delegate void glVertexAttribP3uivDelegate(uint index, uint type, bool normalized, ref uint value);
        public static glVertexAttribP3uivDelegate glVertexAttribP3uiv;

        public delegate void glVertexAttribP4uiDelegate(uint index, uint type, bool normalized, uint value);
        public static glVertexAttribP4uiDelegate glVertexAttribP4ui;

        public delegate void glVertexAttribP4uivDelegate(uint index, uint type, bool normalized, ref uint value);
        public static glVertexAttribP4uivDelegate glVertexAttribP4uiv;

        public delegate void glVertexAttribPointerDelegate(uint index, int size, VertexAttribPointerType type, bool normalized, int stride, IntPtr pointer);
        public static glVertexAttribPointerDelegate glVertexAttribPointer;

        public delegate void glVertexBindingDivisorDelegate(uint bindingindex, uint divisor);
        public static glVertexBindingDivisorDelegate glVertexBindingDivisor;

        public delegate void glViewportDelegate(int x, int y, int width, int height);
        public static glViewportDelegate glViewport;

        public delegate void glViewportArrayvDelegate(uint first, int count, float[] v);
        public static glViewportArrayvDelegate glViewportArrayv;

        public delegate void glViewportIndexedfDelegate(uint index, float x, float y, float w, float h);
        public static glViewportIndexedfDelegate glViewportIndexedf;

        public delegate void glViewportIndexedfvDelegate(uint index, float[] v);
        public static glViewportIndexedfvDelegate glViewportIndexedfv;

        public delegate void glWaitSyncDelegate(GLsync sync, uint flags, ulong timeout);
        public static glWaitSyncDelegate glWaitSync;

    }
}
